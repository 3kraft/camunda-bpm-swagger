{
  "swagger" : "2.0",
  "info" : {
    "description" : "swagger for camunda rest api",
    "version" : "v7.7.0",
    "title" : "Camunda REST API",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "localhost:8080",
  "basePath" : "/engine-rest/engine/default",
  "tags" : [ {
    "name" : "Authorization"
  }, {
    "name" : "Batch"
  }, {
    "name" : "Case"
  }, {
    "name" : "Decision"
  }, {
    "name" : "Deployment"
  }, {
    "name" : "Execution"
  }, {
    "name" : "External"
  }, {
    "name" : "Filter"
  }, {
    "name" : "Group"
  }, {
    "name" : "Historic"
  }, {
    "name" : "History"
  }, {
    "name" : "Identity"
  }, {
    "name" : "Incident"
  }, {
    "name" : "Job"
  }, {
    "name" : "Message"
  }, {
    "name" : "Metrics"
  }, {
    "name" : "Migration"
  }, {
    "name" : "Modification"
  }, {
    "name" : "Process"
  }, {
    "name" : "Task"
  }, {
    "name" : "Tenant"
  }, {
    "name" : "User"
  }, {
    "name" : "Variable"
  } ],
  "schemes" : [ "http" ],
  "paths" : {
    "/activity-instance" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic Activity Instances",
        "description" : "",
        "operationId" : "getHistoricActivityInstancesList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo6810",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Parameter firstResult",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Parameter maxResults",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Historic" ],
        "summary" : "Query Historic Activity Instances",
        "description" : "",
        "operationId" : "queryHistoricActivityInstancesList",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter historicActivityInstanceQueryDto328",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoricActivityInstanceQueryDto"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Parameter firstResult",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Parameter maxResults",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/activity-instance/count" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic Activity Instances Count",
        "description" : "",
        "operationId" : "getHistoricActivityInstancesCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Historic" ],
        "summary" : "Query Historic Activity Instances Count",
        "description" : "",
        "operationId" : "queryHistoricActivityInstancesCount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter historicActivityInstanceQueryDto7693",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoricActivityInstanceQueryDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      }
    },
    "/activity-instance/{id}" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic Activity Instance",
        "description" : "",
        "operationId" : "getHistoricCaseInstanceGetHistoricActivityInstance",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HistoricActivityInstanceDtoSwagger"
            }
          }
        }
      }
    },
    "/authorization" : {
      "get" : {
        "tags" : [ "Authorization" ],
        "summary" : "Queries for a list of authorizations using a list of parameters.\nThe size of the result set can be retrieved by using the Get Authorization Count",
        "description" : "",
        "operationId" : "queryAuthorizationsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo1868",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "Authorization" ],
        "summary" : "The `/authorization` resource supports two custom OPTIONS requests, one for the resource as such and one for individual authorization instances. The OPTIONS request allows you to check for the set of available operations that the currently authenticated user can perform on the `/authorization` resource. Whether the user can perform an operation or not may depend on various factors, including the users authorizations to interact with this resource and the internal configuration of the process engine.",
        "description" : "",
        "operationId" : "availableOperations",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResourceOptionsDtoSwagger"
            }
          }
        }
      }
    },
    "/authorization/check" : {
      "get" : {
        "tags" : [ "Authorization" ],
        "summary" : "Performs an authorization check for the currently authenticated user.",
        "description" : "",
        "operationId" : "isUserAuthorized",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "permissionName",
          "in" : "query",
          "description" : "Yes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "resourceName",
          "in" : "query",
          "description" : "Yes",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "resourceType",
          "in" : "query",
          "description" : "Yes",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "resourceId",
          "in" : "query",
          "description" : "No",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AuthorizationCheckResultDto"
            }
          }
        }
      }
    },
    "/authorization/count" : {
      "get" : {
        "tags" : [ "Authorization" ],
        "summary" : "Queries for authorizations using a list of parameters and retrieves the count.",
        "description" : "",
        "operationId" : "getAuthorizationCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      }
    },
    "/authorization/create" : {
      "post" : {
        "tags" : [ "Authorization" ],
        "summary" : "Creates a new authorization.",
        "description" : "",
        "operationId" : "createAuthorization",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter authorizationCreateDto3821",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AuthorizationCreateDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AuthorizationDtoSwagger"
            }
          }
        }
      }
    },
    "/authorization/{id}" : {
      "get" : {
        "tags" : [ "Authorization" ],
        "summary" : "Retrieves an authorization by id.",
        "description" : "",
        "operationId" : "getAuthorizationGetAuthorization",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the authorization to be retrieved.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo2223",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AuthorizationDtoSwagger"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Authorization" ],
        "summary" : "Updates an authorization by id.",
        "description" : "",
        "operationId" : "getAuthorizationUpdateAuthorization",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the authorization to be updated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter authorizationDto4759",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AuthorizationDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "Authorization" ],
        "summary" : "Deletes an authorization by id.",
        "description" : "",
        "operationId" : "getAuthorizationDeleteAuthorization",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the authorization to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "options" : {
        "tags" : [ "Authorization" ],
        "summary" : "Available Operations",
        "description" : "",
        "operationId" : "getAuthorizationAvailableOperations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo6277",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResourceOptionsDtoSwagger"
            }
          }
        }
      }
    },
    "/batch" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Queries for batches that fulfill given parameters. Parameters may be\nthe properties of batches, such as the id or type.  The\nsize of the result set can be retrieved by using the Get Batch Count\nrelref \"reference/rest/batch/get-query-count.md\" >}}) method.",
        "description" : "",
        "operationId" : "getHistoricBatchesList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo2463",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/batch/count" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Requests the number of batches that fulfill the query criteria.\nTakes the same filtering parameters as the Get Batches\n\"reference/rest/batch/get-query.md\" >}}) method.",
        "description" : "",
        "operationId" : "getHistoricBatchesCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      }
    },
    "/batch/statistics" : {
      "get" : {
        "tags" : [ "Batch" ],
        "summary" : "Queries for batch statistics that fulfill given parameters. Parameters may be the\nproperties of batches, such as the id or type.  The size of the result set can\nbe retrieved by using the Get Batch Statistics Count\n\"reference/rest/batch/get-statistics-query-count.md\" >}}) method.",
        "description" : "",
        "operationId" : "getStatisticsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo1343",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/batch/statistics/count" : {
      "get" : {
        "tags" : [ "Batch" ],
        "summary" : "Requests the number of batch statistics that fulfill the query criteria.  Takes\nthe same filtering parameters as the Get Batch Statistics\n\"reference/rest/batch/get-statistics-query.md\" >}}) method.",
        "description" : "",
        "operationId" : "getStatisticsCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      }
    },
    "/batch/{id}" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Retrieves a batch by id, according to the `Batch` interface in the engine.",
        "description" : "",
        "operationId" : "getHistoricBatchGetHistoricBatch",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the batch to be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HistoricBatchDtoSwagger"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Historic" ],
        "summary" : "Deletes a batch by id, including all related jobs and job definitions. Optionally also\ndeletes the batch history.",
        "description" : "",
        "operationId" : "getHistoricBatchDeleteHistoricBatch",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the batch to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/batch/{id}/suspended" : {
      "put" : {
        "tags" : [ "Batch" ],
        "summary" : "Activates or suspends a batch by id.",
        "description" : "",
        "operationId" : "getBatchUpdateSuspensionState",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the batch to activate or suspend.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter suspensionStateDto6341",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SuspensionStateDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-activity-instance" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic Case Activity Instances",
        "description" : "",
        "operationId" : "getHistoricCaseActivityInstancesList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo8427",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Parameter firstResult",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Parameter maxResults",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/case-activity-instance/count" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic Case Activity Instances Count",
        "description" : "",
        "operationId" : "getHistoricCaseActivityInstancesCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      }
    },
    "/case-activity-instance/{id}" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic Case Activity Instance",
        "description" : "",
        "operationId" : "getHistoricCaseInstanceGetHistoricCaseActivityInstance",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HistoricCaseActivityInstanceDtoSwagger"
            }
          }
        }
      }
    },
    "/case-definition" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Queries for case definitions that fulfill given parameters. Parameters may be the properties of case definitions, such as the name, key or version.\nThe size of the result set can be retrieved by using the Get Case Definition Count",
        "description" : "",
        "operationId" : "getCaseDefinitionsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo1482",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/case-definition/count" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Requests the number of case definitions that fulfill the query criteria. Takes the same filtering parameters as the\nGet Case Definitions",
        "description" : "",
        "operationId" : "getCaseDefinitionsCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      }
    },
    "/case-definition/key/{key}" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Get Case Definition",
        "description" : "",
        "operationId" : "getCaseDefinitionByKeyGetCaseDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CaseDefinitionDtoSwagger"
            }
          }
        }
      }
    },
    "/case-definition/key/{key}/create" : {
      "post" : {
        "tags" : [ "Case" ],
        "summary" : "Create Case Instance",
        "description" : "",
        "operationId" : "getCaseDefinitionByKeyCreateCaseInstance",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo5700",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter createCaseInstanceDto7244",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateCaseInstanceDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CaseInstanceDtoSwagger"
            }
          }
        }
      }
    },
    "/case-definition/key/{key}/diagram" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Get Case Definition Diagram",
        "description" : "",
        "operationId" : "getCaseDefinitionByKeyGetCaseDefinitionDiagram",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-definition/key/{key}/history-time-to-live" : {
      "put" : {
        "tags" : [ "Case" ],
        "summary" : "Update History Time To Live",
        "description" : "",
        "operationId" : "getCaseDefinitionByKeyUpdateHistoryTimeToLive",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter historyTimeToLiveDto608",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoryTimeToLiveDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-definition/key/{key}/tenant-id/{tenantId}" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Get Case Definition",
        "description" : "",
        "operationId" : "getCaseDefinitionByKeyAndTenantIdGetCaseDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CaseDefinitionDtoSwagger"
            }
          }
        }
      }
    },
    "/case-definition/key/{key}/tenant-id/{tenantId}/create" : {
      "post" : {
        "tags" : [ "Case" ],
        "summary" : "Create Case Instance",
        "description" : "",
        "operationId" : "getCaseDefinitionByKeyAndTenantIdCreateCaseInstance",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo1310",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter createCaseInstanceDto7700",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateCaseInstanceDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CaseInstanceDtoSwagger"
            }
          }
        }
      }
    },
    "/case-definition/key/{key}/tenant-id/{tenantId}/diagram" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Get Case Definition Diagram",
        "description" : "",
        "operationId" : "getCaseDefinitionByKeyAndTenantIdGetCaseDefinitionDiagram",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-definition/key/{key}/tenant-id/{tenantId}/history-time-to-live" : {
      "put" : {
        "tags" : [ "Case" ],
        "summary" : "Update History Time To Live",
        "description" : "",
        "operationId" : "getCaseDefinitionByKeyAndTenantIdUpdateHistoryTimeToLive",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter historyTimeToLiveDto4810",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoryTimeToLiveDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-definition/key/{key}/tenant-id/{tenantId}/xml" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Get Case Definition Cmmn Xml",
        "description" : "",
        "operationId" : "getCaseDefinitionByKeyAndTenantIdGetCaseDefinitionCmmnXml",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CaseDefinitionDiagramDtoSwagger"
            }
          }
        }
      }
    },
    "/case-definition/key/{key}/xml" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Get Case Definition Cmmn Xml",
        "description" : "",
        "operationId" : "getCaseDefinitionByKeyGetCaseDefinitionCmmnXml",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CaseDefinitionDiagramDtoSwagger"
            }
          }
        }
      }
    },
    "/case-definition/{id}" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Retrieves a case definition according to the `CaseDefinition` interface in the engine.",
        "description" : "",
        "operationId" : "getCaseDefinitionByIdGetCaseDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the case definition to be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CaseDefinitionDtoSwagger"
            }
          }
        }
      }
    },
    "/case-definition/{id}/create" : {
      "post" : {
        "tags" : [ "Case" ],
        "summary" : "Instantiates a given case definition. Case variables and business key may be supplied in the request body.",
        "description" : "",
        "operationId" : "getCaseDefinitionByIdCreateCaseInstance",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the case definition to be retrieved.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo6620",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter createCaseInstanceDto5796",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateCaseInstanceDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CaseInstanceDtoSwagger"
            }
          }
        }
      }
    },
    "/case-definition/{id}/diagram" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Retrieves the diagram of a case definition.",
        "description" : "",
        "operationId" : "getCaseDefinitionByIdGetCaseDefinitionDiagram",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the case definition.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-definition/{id}/history-time-to-live" : {
      "put" : {
        "tags" : [ "Case" ],
        "summary" : "Updates history time to live for case definition with given id. The field is used within History cleanup",
        "description" : "",
        "operationId" : "getCaseDefinitionByIdUpdateHistoryTimeToLive",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the case definition to change history time to live.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter historyTimeToLiveDto3871",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoryTimeToLiveDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-definition/{id}/statistics" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic Case Activity Statistics",
        "description" : "",
        "operationId" : "getHistoricCaseActivityStatisticsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/case-definition/{id}/xml" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Retrieves the CMMN XML of a case definition.",
        "description" : "",
        "operationId" : "getCaseDefinitionByIdGetCaseDefinitionCmmnXml",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the case definition.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CaseDefinitionDiagramDtoSwagger"
            }
          }
        }
      }
    },
    "/case-execution" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Queries for case executions that fulfill given parameters.\nParameters may be static as well as dynamic runtime properties of case executions.\nThe size of the result set can be retrieved by using the Get Case Execution Count",
        "description" : "",
        "operationId" : "getCaseExecutionsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo3879",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Case" ],
        "summary" : "Queries for case executions that fulfill given parameters through a JSON object.\nThis method is slightly more powerful than the Get Case Executions\nfiltering by multiple case variables of types `String`, `Number` or `Boolean`.",
        "description" : "",
        "operationId" : "queryCaseExecutionsList",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter caseExecutionQueryDto7713",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CaseExecutionQueryDto"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/case-execution/count" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Queries for the number of case executions that fulfill given parameters.\nTakes the same parameters as the Get Case Executions",
        "description" : "",
        "operationId" : "getCaseExecutionsCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Case" ],
        "summary" : "Query Case Executions Count",
        "description" : "",
        "operationId" : "queryCaseExecutionsCount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter caseExecutionQueryDto3432",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CaseExecutionQueryDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      }
    },
    "/case-execution/{id}" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Retrieves a case execution by id, according to the `CaseExecution` interface in the engine.",
        "description" : "",
        "operationId" : "getCaseExecutionGetCaseExecution",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the case execution to be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CaseExecutionDtoSwagger"
            }
          }
        }
      }
    },
    "/case-execution/{id}/complete" : {
      "post" : {
        "tags" : [ "Case" ],
        "summary" : "title: \"Complete Case Execution\"\nweight: 70",
        "description" : "",
        "operationId" : "getCaseExecutionComplete",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the case execution to complete.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter caseExecutionTriggerDto9384",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CaseExecutionTriggerDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-execution/{id}/disable" : {
      "post" : {
        "tags" : [ "Case" ],
        "summary" : "Performs a transition from ENABLED state to DISABLED state. In relation to the state transition, it is possible to update or delete case instance variables (please note: deletion precedes update).",
        "description" : "",
        "operationId" : "getCaseExecutionDisable",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the case execution to disable.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter caseExecutionTriggerDto8000",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CaseExecutionTriggerDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-execution/{id}/localVariables" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Retrieves all variables of a given case execution.",
        "description" : "",
        "operationId" : "getCaseExecutionGetVariablesLocalGetVariablesMap",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the case execution to retrieve the variables from.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deserializeValues",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Case" ],
        "summary" : "Updates or deletes the variables in the context of a case execution. The updates do not propagate upwards in the case execution hierarchy.\nPlease note: deletion precedes update.",
        "description" : "",
        "operationId" : "getCaseExecutionGetVariablesLocalModifyVariables",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the case execution to set variables for.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter patchVariablesDto518",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PatchVariablesDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-execution/{id}/localVariables/{varId}" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Get Variable",
        "description" : "",
        "operationId" : "getCaseExecutionGetVariablesLocalGetVariable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deserializeValue",
          "in" : "query",
          "description" : "Parameter deserializeValue",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VariableValueDtoSwagger"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Case" ],
        "summary" : "Put Variable",
        "description" : "",
        "operationId" : "getCaseExecutionGetVariablesLocalPutVariable",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter variableValueDto3200",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VariableValueDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "Case" ],
        "summary" : "Delete Variable",
        "description" : "",
        "operationId" : "getCaseExecutionGetVariablesLocalDeleteVariable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-execution/{id}/localVariables/{varId}/data" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Get Variable Binary",
        "description" : "",
        "operationId" : "getCaseExecutionGetVariablesLocalGetVariableBinary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "tags" : [ "Case" ],
        "summary" : "Set Binary Variable",
        "description" : "",
        "operationId" : "getCaseExecutionGetVariablesLocalSetBinaryVariable",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter multipartFormData4827",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipartFormData"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-execution/{id}/manual-start" : {
      "post" : {
        "tags" : [ "Case" ],
        "summary" : "Performs a transition from ENABLED state to ACTIVE state. In relation to the state transition, it is possible to update or delete case instance variables (please note: deletion precedes update).",
        "description" : "",
        "operationId" : "getCaseExecutionManualStart",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the case execution to start manually.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter caseExecutionTriggerDto4599",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CaseExecutionTriggerDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-execution/{id}/reenable" : {
      "post" : {
        "tags" : [ "Case" ],
        "summary" : "Performs a transition from DISABLED state to ENABLED state. In relation to the state transition, it is possible to update or delete case instance variables (please note: deletion precedes update).",
        "description" : "",
        "operationId" : "getCaseExecutionReenable",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the case execution to re-enable.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter caseExecutionTriggerDto5372",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CaseExecutionTriggerDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-execution/{id}/terminate" : {
      "post" : {
        "tags" : [ "Case" ],
        "summary" : "title: \"Terminate Case Execution\"\nweight: 90",
        "description" : "",
        "operationId" : "getCaseExecutionTerminate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the case execution to terminate.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter caseExecutionTriggerDto3686",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CaseExecutionTriggerDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-execution/{id}/variables" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Retrieves all variables of a given case execution by id.",
        "description" : "",
        "operationId" : "getCaseExecutionGetVariablesGetVariablesMap",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the case execution to retrieve the variables from.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deserializeValues",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Case" ],
        "summary" : "Updates or deletes the variables of a case execution by id. Please note: deletion precedes update.",
        "description" : "",
        "operationId" : "getCaseExecutionGetVariablesModifyVariables",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the case execution to set variables for.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter patchVariablesDto9530",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PatchVariablesDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-execution/{id}/variables/{varId}" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Get Variable",
        "description" : "",
        "operationId" : "getCaseExecutionGetVariablesGetVariable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deserializeValue",
          "in" : "query",
          "description" : "Parameter deserializeValue",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VariableValueDtoSwagger"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Case" ],
        "summary" : "Put Variable",
        "description" : "",
        "operationId" : "getCaseExecutionGetVariablesPutVariable",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter variableValueDto520",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VariableValueDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "Case" ],
        "summary" : "Delete Variable",
        "description" : "",
        "operationId" : "getCaseExecutionGetVariablesDeleteVariable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-execution/{id}/variables/{varId}/data" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Get Variable Binary",
        "description" : "",
        "operationId" : "getCaseExecutionGetVariablesGetVariableBinary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "tags" : [ "Case" ],
        "summary" : "Set Binary Variable",
        "description" : "",
        "operationId" : "getCaseExecutionGetVariablesSetBinaryVariable",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter multipartFormData4271",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipartFormData"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-instance" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Queries for case instances that fulfill given parameters.\nParameters may be static as well as dynamic runtime properties of case instances.\nThe size of the result set can be retrieved by using the Get Case Instance Count",
        "description" : "",
        "operationId" : "getHistoricCaseInstancesList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo7501",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Historic" ],
        "summary" : "Queries for case instances that fulfill given parameters through a JSON object.\nThis method is slightly more powerful than the Get Case Instances\nto filter by multiple case variables of types `String`, `Number` or `Boolean`.",
        "description" : "",
        "operationId" : "queryHistoricCaseInstancesList",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter historicCaseInstanceQueryDto6138",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoricCaseInstanceQueryDto"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/case-instance/count" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Queries for the number of case instances that fulfill given parameters.\nTakes the same parameters as the Get Case Instances",
        "description" : "",
        "operationId" : "getHistoricCaseInstancesCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Historic" ],
        "summary" : "Queries for the number of case instances that fulfill the given parameters.\nThis method takes the same message body as the Get Case Instance (POST)\nand therefore it is slightly more powerful than the Get Case Instance Count",
        "description" : "",
        "operationId" : "queryHistoricCaseInstancesCount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter historicCaseInstanceQueryDto8821",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoricCaseInstanceQueryDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      }
    },
    "/case-instance/{id}" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Retrieves a case instance by id, according to the `CaseInstance` interface in the engine.",
        "description" : "",
        "operationId" : "getHistoricCaseInstanceGetHistoricCaseInstance",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the case instance to be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HistoricCaseInstanceDtoSwagger"
            }
          }
        }
      }
    },
    "/case-instance/{id}/close" : {
      "post" : {
        "tags" : [ "Case" ],
        "summary" : "Performs a transition from COMPLETED state to CLOSED state. In relation to the state transition, it is possible to update or delete case instance variables (please note: deletion precedes update).",
        "description" : "",
        "operationId" : "getCaseInstanceClose",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the case instance to close.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter caseExecutionTriggerDto8473",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CaseExecutionTriggerDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-instance/{id}/complete" : {
      "post" : {
        "tags" : [ "Case" ],
        "summary" : "Performs a transition from ACTIVE state to COMPLETED state. In relation to the state transition, it is possible to update or delete case instance variables (please note: deletion precedes update).",
        "description" : "",
        "operationId" : "getCaseInstanceComplete",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the case instance to complete.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter caseExecutionTriggerDto3422",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CaseExecutionTriggerDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-instance/{id}/terminate" : {
      "post" : {
        "tags" : [ "Case" ],
        "summary" : "Performs a transition from ACTIVE state to TERMINATED state. In relation to the state transition, it is possible to update or delete case instance variables (please note: deletion precedes update).",
        "description" : "",
        "operationId" : "getCaseInstanceTerminate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the case instance to terminate.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter caseExecutionTriggerDto7744",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CaseExecutionTriggerDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-instance/{id}/variables" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Retrieves all variables of a given case instance by id.",
        "description" : "",
        "operationId" : "getCaseInstanceGetVariablesResourceGetVariablesMap",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the case instance to retrieve the variables from.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deserializeValues",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Case" ],
        "summary" : "Updates or deletes the variables of a case instance. Please note: deletion precedes update.",
        "description" : "",
        "operationId" : "getCaseInstanceGetVariablesResourceModifyVariables",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the case instance to set variables for.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter patchVariablesDto2731",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PatchVariablesDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-instance/{id}/variables/{varId}" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Get Variable",
        "description" : "",
        "operationId" : "getCaseInstanceGetVariablesResourceGetVariable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deserializeValue",
          "in" : "query",
          "description" : "Parameter deserializeValue",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VariableValueDtoSwagger"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Case" ],
        "summary" : "Put Variable",
        "description" : "",
        "operationId" : "getCaseInstanceGetVariablesResourcePutVariable",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter variableValueDto8966",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VariableValueDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "Case" ],
        "summary" : "Delete Variable",
        "description" : "",
        "operationId" : "getCaseInstanceGetVariablesResourceDeleteVariable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/case-instance/{id}/variables/{varId}/data" : {
      "get" : {
        "tags" : [ "Case" ],
        "summary" : "Get Variable Binary",
        "description" : "",
        "operationId" : "getCaseInstanceGetVariablesResourceGetVariableBinary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "tags" : [ "Case" ],
        "summary" : "Set Binary Variable",
        "description" : "",
        "operationId" : "getCaseInstanceGetVariablesResourceSetBinaryVariable",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter multipartFormData7076",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipartFormData"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/decision-definition" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Queries for decision definitions that fulfill given parameters. Parameters may be\nthe properties of decision definitions, such as the name, key or version.  The\nsize of the result set can be retrieved by using the Get Decision Definition Count\nrelref \"reference/rest/decision-definition/get-query-count.md\" >}}) method.",
        "description" : "",
        "operationId" : "getDecisionDefinitionsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo2177",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/decision-definition/count" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Requests the number of decision definitions that fulfill the query criteria.\nTakes the same filtering parameters as the Get Decision Definitions\n\"reference/rest/decision-definition/get-query.md\" >}}) method.",
        "description" : "",
        "operationId" : "getDecisionDefinitionsCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      }
    },
    "/decision-definition/key/{key}" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Get Decision Definition",
        "description" : "",
        "operationId" : "getDecisionDefinitionByKeyGetDecisionDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DecisionDefinitionDtoSwagger"
            }
          }
        }
      }
    },
    "/decision-definition/key/{key}/diagram" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Get Decision Definition Diagram",
        "description" : "",
        "operationId" : "getDecisionDefinitionByKeyGetDecisionDefinitionDiagram",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/decision-definition/key/{key}/evaluate" : {
      "post" : {
        "tags" : [ "Decision" ],
        "summary" : "Evaluate Decision",
        "description" : "",
        "operationId" : "getDecisionDefinitionByKeyEvaluateDecision",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo3731",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter evaluateDecisionDto5899",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/EvaluateDecisionDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/decision-definition/key/{key}/history-time-to-live" : {
      "put" : {
        "tags" : [ "Decision" ],
        "summary" : "Update History Time To Live",
        "description" : "",
        "operationId" : "getDecisionDefinitionByKeyUpdateHistoryTimeToLive",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter historyTimeToLiveDto6862",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoryTimeToLiveDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/decision-definition/key/{key}/tenant-id/{tenantId}" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Get Decision Definition",
        "description" : "",
        "operationId" : "getDecisionDefinitionByKeyAndTenantIdGetDecisionDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DecisionDefinitionDtoSwagger"
            }
          }
        }
      }
    },
    "/decision-definition/key/{key}/tenant-id/{tenantId}/diagram" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Get Decision Definition Diagram",
        "description" : "",
        "operationId" : "getDecisionDefinitionByKeyAndTenantIdGetDecisionDefinitionDiagram",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/decision-definition/key/{key}/tenant-id/{tenantId}/evaluate" : {
      "post" : {
        "tags" : [ "Decision" ],
        "summary" : "Evaluate Decision",
        "description" : "",
        "operationId" : "getDecisionDefinitionByKeyAndTenantIdEvaluateDecision",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo4708",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter evaluateDecisionDto4421",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/EvaluateDecisionDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/decision-definition/key/{key}/tenant-id/{tenantId}/history-time-to-live" : {
      "put" : {
        "tags" : [ "Decision" ],
        "summary" : "Update History Time To Live",
        "description" : "",
        "operationId" : "getDecisionDefinitionByKeyAndTenantIdUpdateHistoryTimeToLive",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter historyTimeToLiveDto9480",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoryTimeToLiveDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/decision-definition/key/{key}/tenant-id/{tenantId}/xml" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Get Decision Definition Dmn Xml",
        "description" : "",
        "operationId" : "getDecisionDefinitionByKeyAndTenantIdGetDecisionDefinitionDmnXml",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DecisionDefinitionDiagramDtoSwagger"
            }
          }
        }
      }
    },
    "/decision-definition/key/{key}/xml" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Get Decision Definition Dmn Xml",
        "description" : "",
        "operationId" : "getDecisionDefinitionByKeyGetDecisionDefinitionDmnXml",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DecisionDefinitionDiagramDtoSwagger"
            }
          }
        }
      }
    },
    "/decision-definition/{id}" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Retrieves a decision definition by id, according to the `DecisionDefinition` interface in the engine.",
        "description" : "",
        "operationId" : "getDecisionDefinitionByIdGetDecisionDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the decision definition to be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DecisionDefinitionDtoSwagger"
            }
          }
        }
      }
    },
    "/decision-definition/{id}/diagram" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Retrieves the diagram of a decision definition.",
        "description" : "",
        "operationId" : "getDecisionDefinitionByIdGetDecisionDefinitionDiagram",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the decision definition.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/decision-definition/{id}/evaluate" : {
      "post" : {
        "tags" : [ "Decision" ],
        "summary" : "Evaluates a given decision and returns the result. The input values of the decision have to be supplied in the request body.",
        "description" : "",
        "operationId" : "getDecisionDefinitionByIdEvaluateDecision",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the decision definition to be evaluated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo6210",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter evaluateDecisionDto2271",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/EvaluateDecisionDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/decision-definition/{id}/history-time-to-live" : {
      "put" : {
        "tags" : [ "Decision" ],
        "summary" : "Updates history time to live for decision definition. The field is used within History cleanup",
        "description" : "",
        "operationId" : "getDecisionDefinitionByIdUpdateHistoryTimeToLive",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the decision definition to change history time to live.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter historyTimeToLiveDto3889",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoryTimeToLiveDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/decision-definition/{id}/xml" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Retrieves the DMN XML of a decision definition.",
        "description" : "",
        "operationId" : "getDecisionDefinitionByIdGetDecisionDefinitionDmnXml",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the decision definition.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DecisionDefinitionDiagramDtoSwagger"
            }
          }
        }
      }
    },
    "/decision-instance" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic Decision Instances",
        "description" : "",
        "operationId" : "getHistoricDecisionInstancesList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo953",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Parameter firstResult",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Parameter maxResults",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/decision-instance/count" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic Decision Instances Count",
        "description" : "",
        "operationId" : "getHistoricDecisionInstancesCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      }
    },
    "/decision-instance/{id}" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic Decision Instance",
        "description" : "",
        "operationId" : "getHistoricDecisionInstanceGetHistoricDecisionInstance",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "includeInputs",
          "in" : "query",
          "description" : "Parameter includeInputs",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "includeOutputs",
          "in" : "query",
          "description" : "Parameter includeOutputs",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "disableBinaryFetching",
          "in" : "query",
          "description" : "Parameter disableBinaryFetching",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "disableCustomObjectDeserialization",
          "in" : "query",
          "description" : "Parameter disableCustomObjectDeserialization",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HistoricDecisionInstanceDtoSwagger"
            }
          }
        }
      }
    },
    "/decision-requirements-definition" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Queries for decision requirements definitions that fulfill given parameters. Parameters may be\nthe properties of decision requirements definitions, such as the name, key or version.  The\nsize of the result set can be retrieved by using the Get Decision Requirements Definition Count\nrelref \"reference/rest/decision-requirements-definition/get-query-count.md\" >}}) method.",
        "description" : "",
        "operationId" : "getDecisionRequirementsDefinitionsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo1305",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/decision-requirements-definition/count" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Requests the number of decision requirements definitions that fulfill the query criteria.\nTakes the same filtering parameters as the Get Decision Requirements Definitions\n\"reference/rest/decision-requirements-definition/get-query.md\" >}}) method.",
        "description" : "",
        "operationId" : "getDecisionRequirementsDefinitionsCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      }
    },
    "/decision-requirements-definition/key/{key}" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Get Decision Requirements Definition",
        "description" : "",
        "operationId" : "getDecisionRequirementsDefinitionByKeyGetDecisionRequirementsDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DecisionRequirementsDefinitionDtoSwagger"
            }
          }
        }
      }
    },
    "/decision-requirements-definition/key/{key}/diagram" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Get Decision Requirements Definition Diagram",
        "description" : "",
        "operationId" : "getDecisionRequirementsDefinitionByKeyGetDecisionRequirementsDefinitionDiagram",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/decision-requirements-definition/key/{key}/tenant-id/{tenant-id}" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Get Decision Requirements Definition",
        "description" : "",
        "operationId" : "getDecisionRequirementsDefinitionByKeyAndTenantIdGetDecisionRequirementsDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DecisionRequirementsDefinitionDtoSwagger"
            }
          }
        }
      }
    },
    "/decision-requirements-definition/key/{key}/tenant-id/{tenant-id}/diagram" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Get Decision Requirements Definition Diagram",
        "description" : "",
        "operationId" : "getDecisionRequirementsDefinitionByKeyAndTenantIdGetDecisionRequirementsDefinitionDiagram",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/decision-requirements-definition/key/{key}/tenant-id/{tenant-id}/xml" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Get Decision Requirements Definition Dmn Xml",
        "description" : "",
        "operationId" : "getDecisionRequirementsDefinitionByKeyAndTenantIdGetDecisionRequirementsDefinitionDmnXml",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DecisionRequirementsDefinitionXmlDtoSwagger"
            }
          }
        }
      }
    },
    "/decision-requirements-definition/key/{key}/xml" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Get Decision Requirements Definition Dmn Xml",
        "description" : "",
        "operationId" : "getDecisionRequirementsDefinitionByKeyGetDecisionRequirementsDefinitionDmnXml",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DecisionRequirementsDefinitionXmlDtoSwagger"
            }
          }
        }
      }
    },
    "/decision-requirements-definition/{id}" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Retrieves a decision requirements definition according to the `DecisionRequirementsDefinition` interface in the engine.",
        "description" : "",
        "operationId" : "getDecisionRequirementsDefinitionByIdGetDecisionRequirementsDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the decision requirements definition to be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DecisionRequirementsDefinitionDtoSwagger"
            }
          }
        }
      }
    },
    "/decision-requirements-definition/{id}/diagram" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Retrieves the diagram of a decision requirements definition.",
        "description" : "",
        "operationId" : "getDecisionRequirementsDefinitionByIdGetDecisionRequirementsDefinitionDiagram",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the decision requirements definition.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/decision-requirements-definition/{id}/statistics" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Decision Statistics",
        "description" : "",
        "operationId" : "getDecisionStatisticsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "decisionInstanceId",
          "in" : "query",
          "description" : "Parameter decisionInstanceId",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/decision-requirements-definition/{id}/xml" : {
      "get" : {
        "tags" : [ "Decision" ],
        "summary" : "Retrieves the DMN XML of a decision requirements definition.",
        "description" : "",
        "operationId" : "getDecisionRequirementsDefinitionByIdGetDecisionRequirementsDefinitionDmnXml",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the decision requirements definition.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DecisionRequirementsDefinitionXmlDtoSwagger"
            }
          }
        }
      }
    },
    "/deployment" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Queries for deployments that fulfill given parameters. Parameters may be the\nproperties of deployments, such as the id or name or a range of the deployment time.\nThe size of the result set\ncan be retrieved by using the Get Deployment count",
        "description" : "",
        "operationId" : "getDeploymentsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo8045",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/deployment/count" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the Get Deployments",
        "description" : "",
        "operationId" : "getDeploymentsCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      }
    },
    "/deployment/create" : {
      "post" : {
        "tags" : [ "Deployment" ],
        "summary" : "Creates a deployment.",
        "description" : "",
        "operationId" : "createDeployment",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter multipartFormData7863",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipartFormData"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeploymentDto"
            }
          }
        }
      }
    },
    "/deployment/{id}" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Retrieves a deployment by id, according to the `Deployment` interface of the engine.",
        "description" : "",
        "operationId" : "getDeploymentGetDeployment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the deployment.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeploymentDtoSwagger"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Deployment" ],
        "summary" : "Deletes a deployment by id.",
        "description" : "",
        "operationId" : "getDeploymentDeleteDeployment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the deployment to be deleted.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo981",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/deployment/{id}/redeploy" : {
      "post" : {
        "tags" : [ "Deployment" ],
        "summary" : "Re-deploys an existing deployment.",
        "description" : "",
        "operationId" : "getDeploymentRedeploy",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the deployment to re-deploy.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo3942",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter redeploymentDto4769",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RedeploymentDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeploymentDtoSwagger"
            }
          }
        }
      }
    },
    "/deployment/{id}/resources" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Retrieves all deployment resources of a given deployment.",
        "description" : "",
        "operationId" : "getDeploymentGetDeploymentResourcesGetDeploymentResourcesList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the deployment to retrieve the deployment resources for.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/deployment/{id}/resources/{resourceId}" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Retrieves a deployment resource by resource id for the given deployment.",
        "description" : "",
        "operationId" : "getDeploymentGetDeploymentResourcesGetDeploymentResource",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceId",
          "in" : "path",
          "description" : "The id of the deployment resource.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeploymentResourceDtoSwagger"
            }
          }
        }
      }
    },
    "/deployment/{id}/resources/{resourceId}/data" : {
      "get" : {
        "tags" : [ "Deployment" ],
        "summary" : "Retrieves the binary content of a deployment resource for the given deployment by id.",
        "description" : "",
        "operationId" : "getDeploymentGetDeploymentResourcesGetDeploymentResourceData",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the deployment.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "resourceId",
          "in" : "path",
          "description" : "The id of the deployment resource.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/detail" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic Details",
        "description" : "",
        "operationId" : "getHistoricDetailsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo6074",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Parameter firstResult",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Parameter maxResults",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "deserializeValues",
          "in" : "query",
          "description" : "Parameter deserializeValues",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/detail/count" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic Details Count",
        "description" : "",
        "operationId" : "getHistoricDetailsCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      }
    },
    "/detail/{id}" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Resource",
        "description" : "",
        "operationId" : "historicDetailGetResource",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deserializeValue",
          "in" : "query",
          "description" : "Parameter deserializeValue",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HistoricDetailDtoSwagger"
            }
          }
        }
      }
    },
    "/detail/{id}/data" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Resource Binary",
        "description" : "",
        "operationId" : "historicDetailGetResourceBinary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/execution" : {
      "get" : {
        "tags" : [ "Execution" ],
        "summary" : "Queries for the executions that fulfill given parameters.\nParameters may be static as well as dynamic runtime properties of executions.\nThe size of the result set can be retrieved by using the Get Execution Count",
        "description" : "",
        "operationId" : "getExecutionsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo1644",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Execution" ],
        "summary" : "Queries for executions that fulfill given parameters through a JSON object.\nThis method is slightly more powerful than the Get Executions\nto filter by multiple instance and execution variables of types `String`, `Number` or `Boolean`.",
        "description" : "",
        "operationId" : "queryExecutionsList",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter executionQueryDto1917",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExecutionQueryDto"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/execution/count" : {
      "get" : {
        "tags" : [ "Execution" ],
        "summary" : "Queries for the number of executions that fulfill given parameters.\nTakes the same parameters as the Get Executions",
        "description" : "",
        "operationId" : "getExecutionsCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Execution" ],
        "summary" : "Queries for the number of executions that fulfill given parameters. This method takes the same message body as the Get Executions (POST)Get Execution Count",
        "description" : "",
        "operationId" : "queryExecutionsCount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter executionQueryDto8378",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExecutionQueryDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      }
    },
    "/execution/{id}" : {
      "get" : {
        "tags" : [ "Execution" ],
        "summary" : "Retrieves an execution by id, according to the `Execution` interface in the engine.",
        "description" : "",
        "operationId" : "getExecutionGetExecution",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the execution to be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ExecutionDtoSwagger"
            }
          }
        }
      }
    },
    "/execution/{id}/localVariables" : {
      "get" : {
        "tags" : [ "Execution" ],
        "summary" : "Retrieves all variables of a given execution by id.",
        "description" : "",
        "operationId" : "getExecutionGetLocalVariablesGetVariablesMap",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the execution to retrieve the variables from.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deserializeValues",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Execution" ],
        "summary" : "Updates or deletes the variables in the context of an execution by id. The updates do not propagate upwards in the execution hierarchy.\nUpdates precede deletions. So, if a variable is updated AND deleted, the deletion overrides the update.",
        "description" : "",
        "operationId" : "getExecutionGetLocalVariablesModifyVariables",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the execution to set variables for.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter patchVariablesDto2896",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PatchVariablesDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/execution/{id}/localVariables/{varId}" : {
      "get" : {
        "tags" : [ "Execution" ],
        "summary" : "Get Variable",
        "description" : "",
        "operationId" : "getExecutionGetLocalVariablesGetVariable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deserializeValue",
          "in" : "query",
          "description" : "Parameter deserializeValue",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VariableValueDtoSwagger"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Execution" ],
        "summary" : "Put Variable",
        "description" : "",
        "operationId" : "getExecutionGetLocalVariablesPutVariable",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter variableValueDto8382",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VariableValueDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "Execution" ],
        "summary" : "Delete Variable",
        "description" : "",
        "operationId" : "getExecutionGetLocalVariablesDeleteVariable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/execution/{id}/localVariables/{varId}/data" : {
      "get" : {
        "tags" : [ "Execution" ],
        "summary" : "Get Variable Binary",
        "description" : "",
        "operationId" : "getExecutionGetLocalVariablesGetVariableBinary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "tags" : [ "Execution" ],
        "summary" : "Set Binary Variable",
        "description" : "",
        "operationId" : "getExecutionGetLocalVariablesSetBinaryVariable",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter multipartFormData4443",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipartFormData"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/execution/{id}/messageSubscriptions/{messageName}" : {
      "get" : {
        "tags" : [ "Execution" ],
        "summary" : "Retrieves a message event subscription for a given execution by id and a message name.",
        "description" : "",
        "operationId" : "getExecutionGetMessageEventSubscriptionGetEventSubscription",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the execution that holds the subscription.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "messageName",
          "in" : "path",
          "description" : "The name of the message that the subscription corresponds to.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EventSubscriptionDtoSwagger"
            }
          }
        }
      }
    },
    "/execution/{id}/messageSubscriptions/{messageName}/trigger" : {
      "post" : {
        "tags" : [ "Execution" ],
        "summary" : "Delivers a message to a specific execution by id, to trigger an existing message event subscription. Inject process variables as the message's payload.",
        "description" : "",
        "operationId" : "getExecutionGetMessageEventSubscriptionTriggerEvent",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the execution to submit the message to.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "messageName",
          "in" : "path",
          "description" : "The name of the message that the addressed subscription corresponds to.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter executionTriggerDto8097",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExecutionTriggerDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/execution/{id}/signal" : {
      "post" : {
        "tags" : [ "Execution" ],
        "summary" : "Signals an execution by id. Can for example be used to explicitly skip user tasks or signal asynchronous continuations.",
        "description" : "",
        "operationId" : "getExecutionSignalExecution",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the execution to signal.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter executionTriggerDto7622",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExecutionTriggerDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/external-task" : {
      "get" : {
        "tags" : [ "External" ],
        "summary" : "Queries for the external tasks that fulfill given parameters.\nParameters may be static as well as dynamic runtime properties of executions.\nThe size of the result set can be retrieved by using the Get External Task Count",
        "description" : "",
        "operationId" : "getExternalTasksList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo2261",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "External" ],
        "summary" : "Queries for external tasks that fulfill given parameters in the form of a JSON object.\nThis method is slightly more powerful than the Get External Tasks",
        "description" : "",
        "operationId" : "queryExternalTasksList",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter externalTaskQueryDto2643",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExternalTaskQueryDto"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/external-task-log" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic External Task Logs",
        "description" : "",
        "operationId" : "getHistoricExternalTaskLogsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo8578",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Parameter firstResult",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Parameter maxResults",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Historic" ],
        "summary" : "Query Historic External Task Logs",
        "description" : "",
        "operationId" : "queryHistoricExternalTaskLogsList",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter historicExternalTaskLogQueryDto6365",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoricExternalTaskLogQueryDto"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Parameter firstResult",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Parameter maxResults",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/external-task-log/count" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic External Task Logs Count",
        "description" : "",
        "operationId" : "getHistoricExternalTaskLogsCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Historic" ],
        "summary" : "Query Historic External Task Logs Count",
        "description" : "",
        "operationId" : "queryHistoricExternalTaskLogsCount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter historicExternalTaskLogQueryDto3080",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoricExternalTaskLogQueryDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      }
    },
    "/external-task-log/{id}" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic External Task Log",
        "description" : "",
        "operationId" : "getHistoricExternalTaskLogGetHistoricExternalTaskLog",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HistoricExternalTaskLogDtoSwagger"
            }
          }
        }
      }
    },
    "/external-task-log/{id}/error-details" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Error Details",
        "description" : "",
        "operationId" : "getHistoricExternalTaskLogGetErrorDetails",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/external-task/count" : {
      "get" : {
        "tags" : [ "External" ],
        "summary" : "Queries for the number of external tasks that fulfill given parameters.\nTakes the same parameters as the Get External Tasks",
        "description" : "",
        "operationId" : "getExternalTasksCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "External" ],
        "summary" : "Queries for the number of external tasks that fulfill given parameters. This method takes the same message body as the Get External Tasks (POST)",
        "description" : "",
        "operationId" : "queryExternalTasksCount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter externalTaskQueryDto3248",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExternalTaskQueryDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      }
    },
    "/external-task/fetchAndLock" : {
      "post" : {
        "tags" : [ "External" ],
        "summary" : "Fetches and locks a specific number of external tasks for execution by a worker. Query can be restricted to specific task topics and for each task topic an individual lock time can be provided.",
        "description" : "",
        "operationId" : "fetchAndLockList",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter fetchExternalTasksDto7898",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FetchExternalTasksDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/external-task/retries-async" : {
      "post" : {
        "tags" : [ "External" ],
        "summary" : "Sets the number of retries left to execute external tasks by id asynchronously. If retries are set to 0, an incident is created.",
        "description" : "",
        "operationId" : "setRetriesAsync",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter setRetriesForExternalTasksDto4160",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SetRetriesForExternalTasksDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BatchDto"
            }
          }
        }
      }
    },
    "/external-task/{id}" : {
      "get" : {
        "tags" : [ "External" ],
        "summary" : "Retrieves an external task by id, corresponding to the `ExternalTask` interface in the engine.",
        "description" : "",
        "operationId" : "getExternalTaskGetExternalTask",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the external task to be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ExternalTaskDtoSwagger"
            }
          }
        }
      }
    },
    "/external-task/{id}/bpmnError" : {
      "post" : {
        "tags" : [ "External" ],
        "summary" : "Reports a business error in the context of a running external task by id. The error code must be specified to identify the BPMN error handler.",
        "description" : "",
        "operationId" : "getExternalTaskHandleBpmnError",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the external task in which context a BPMN error is reported.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter externalTaskBpmnError6186",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExternalTaskBpmnError"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/external-task/{id}/complete" : {
      "post" : {
        "tags" : [ "External" ],
        "summary" : "Completes an external task by id and updates process variables.",
        "description" : "",
        "operationId" : "getExternalTaskComplete",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to complete.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter completeExternalTaskDto4367",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CompleteExternalTaskDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/external-task/{id}/errorDetails" : {
      "get" : {
        "tags" : [ "External" ],
        "summary" : "Get Error Details",
        "description" : "",
        "operationId" : "getExternalTaskGetErrorDetails",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/external-task/{id}/failure" : {
      "post" : {
        "tags" : [ "External" ],
        "summary" : "Reports a failure to execute an external task by id. A number of retries and a timeout until the task can be retried can be specified. If retries are set to 0, an incident for this task is created.",
        "description" : "",
        "operationId" : "getExternalTaskHandleFailure",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the external task to report a failure for.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter externalTaskFailureDto9534",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ExternalTaskFailureDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/external-task/{id}/priority" : {
      "put" : {
        "tags" : [ "External" ],
        "summary" : "Sets the priority of an existing external task by id. The default value of a priority is 0.",
        "description" : "",
        "operationId" : "getExternalTaskSetPriority",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the external task to set the priority for.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter priorityDto3599",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PriorityDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/external-task/{id}/retries" : {
      "put" : {
        "tags" : [ "External" ],
        "summary" : "Sets the number of retries left to execute an external task by id. If retries are set to 0, an incident is created.",
        "description" : "",
        "operationId" : "getExternalTaskSetRetries",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the external task to set the number of retries for.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter retriesDto833",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RetriesDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/external-task/{id}/unlock" : {
      "post" : {
        "tags" : [ "External" ],
        "summary" : "Unlocks an external task by id. Clears the task's lock expiration time and worker id.",
        "description" : "",
        "operationId" : "getExternalTaskUnlock",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the external task to unlock.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/filter" : {
      "get" : {
        "tags" : [ "Filter" ],
        "summary" : "Queries for a list of filters using a list of parameters. The size of the result set can be retrieved\nby using the Get Filter Count",
        "description" : "",
        "operationId" : "getFiltersList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo3791",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "itemCount",
          "in" : "query",
          "description" : "If set to true, each filter result will contain an itemCount property with the number of items matched by the filter itself.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "Filter" ],
        "summary" : "The `/filter` resource supports two custom OPTIONS requests, one for the resource as such and one for individual filter instances. The OPTIONS request allows you to check for the set of available operations that the currently authenticated user can perform on the `/filter` resource. Whether the user can perform an operation or not may depend on various factors, including the users authorizations to interact with this resource and the internal configuration of the process engine.",
        "description" : "",
        "operationId" : "availableOperations",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResourceOptionsDtoSwagger"
            }
          }
        }
      }
    },
    "/filter/count" : {
      "get" : {
        "tags" : [ "Filter" ],
        "summary" : "Retrieves the number of filters that fulfill a provided query. Corresponds to the size of the result set\nwhen using the Get Filters",
        "description" : "",
        "operationId" : "getFiltersCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      }
    },
    "/filter/create" : {
      "post" : {
        "tags" : [ "Filter" ],
        "summary" : "Creates a new filter.",
        "description" : "",
        "operationId" : "createFilter",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter filterDto3451",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FilterDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FilterDto"
            }
          }
        }
      }
    },
    "/filter/{id}" : {
      "get" : {
        "tags" : [ "Filter" ],
        "summary" : "Retrieves a single filter by id, according to the `Filter` interface in the engine.",
        "description" : "",
        "operationId" : "getFilterGetFilter",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the filter to be retrieved.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "itemCount",
          "in" : "query",
          "description" : "If set to true, each filter result will contain an itemCount property with the number of items matched by the filter itself.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FilterDtoSwagger"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Filter" ],
        "summary" : "Updates an existing filter.",
        "description" : "",
        "operationId" : "getFilterUpdateFilter",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter filterDto5457",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/FilterDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "Filter" ],
        "summary" : "Deletes a filter by id.",
        "description" : "",
        "operationId" : "getFilterDeleteFilter",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the filter to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "options" : {
        "tags" : [ "Filter" ],
        "summary" : "Available Operations",
        "description" : "",
        "operationId" : "getFilterAvailableOperations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo2880",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResourceOptionsDtoSwagger"
            }
          }
        }
      }
    },
    "/filter/{id}/count" : {
      "get" : {
        "tags" : [ "Filter" ],
        "summary" : "Executes the saved query of the filter by id and returns the count.",
        "description" : "",
        "operationId" : "getFilterExecuteCount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the filter to execute.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Filter" ],
        "summary" : "Executes the saved query of the filter by id and returns the count. This method is slightly more\npowerful then the Get Execute Filter Count\nthe saved query of the filter.",
        "description" : "",
        "operationId" : "getFilterQueryCount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the filter to execute.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter string3867",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      }
    },
    "/filter/{id}/list" : {
      "get" : {
        "tags" : [ "Filter" ],
        "summary" : "Executes the saved query of the filter by id and returns the result list.",
        "description" : "",
        "operationId" : "getFilterExecuteList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the filter to execute.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter request1066",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Request"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Filter" ],
        "summary" : "Executes the saved query of the filter by id and returns the result list. This method is slightly more\npowerful then the Get Execute Filter List\nquery of the filter.",
        "description" : "",
        "operationId" : "getFilterQueryList",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the filter to execute.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter request9630",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Request"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter string5958",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "/filter/{id}/singleResult" : {
      "get" : {
        "tags" : [ "Filter" ],
        "summary" : "Executes the saved query of the filter by id and returns the single result.",
        "description" : "",
        "operationId" : "getFilterExecuteSingleResult",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the filter to execute.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter request8430",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Request"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Filter" ],
        "summary" : "Executes the saved query of the filter by id and returns the single result. This method is slightly more\npowerful then the Get Execute Filter Single Result\nthe saved query of the filter.",
        "description" : "",
        "operationId" : "getFilterQuerySingleResult",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the filter to execute.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter request2770",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Request"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter string130",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "/group" : {
      "get" : {
        "tags" : [ "Group" ],
        "summary" : "Queries for a list of groups using a list of parameters.\nThe size of the result set can be retrieved by using the Get Group Count",
        "description" : "",
        "operationId" : "queryGroupsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo2434",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "Group" ],
        "summary" : "The `/group` resource supports two custom OPTIONS requests, one for the resource as such and one for individual group instances. The OPTIONS request allows checking for the set of available operations that the currently authenticated user can perform on the `/group` resource. If the user can perform an operation or not may depend on various things, including the users authorizations to interact with this resource and the internal configuration of the process engine.",
        "description" : "",
        "operationId" : "availableOperations",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResourceOptionsDto"
            }
          }
        }
      }
    },
    "/group/count" : {
      "get" : {
        "tags" : [ "Group" ],
        "summary" : "Queries for groups using a list of parameters and retrieves the count.",
        "description" : "",
        "operationId" : "getGroupCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      }
    },
    "/group/create" : {
      "post" : {
        "tags" : [ "Group" ],
        "summary" : "Creates a new group.",
        "description" : "",
        "operationId" : "createGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter groupDto2727",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/GroupDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/group/{id}" : {
      "get" : {
        "tags" : [ "Group" ],
        "summary" : "Retrieves a group by id.",
        "description" : "",
        "operationId" : "getGroupGetGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the group to be retrieved.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo5779",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GroupDtoSwagger"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Group" ],
        "summary" : "Updates a given group by id.",
        "description" : "",
        "operationId" : "getGroupUpdateGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the group.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter groupDto5904",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/GroupDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "Group" ],
        "summary" : "Deletes a group by id.",
        "description" : "",
        "operationId" : "getGroupDeleteGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the group to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "options" : {
        "tags" : [ "Group" ],
        "summary" : "Available Operations",
        "description" : "",
        "operationId" : "getGroupAvailableOperations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo7311",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResourceOptionsDtoSwagger"
            }
          }
        }
      }
    },
    "/group/{id}/members" : {
      "options" : {
        "tags" : [ "Group" ],
        "summary" : "The OPTIONS request allows checking for the set of available operations that the currently authenticated user can perform on the resource. If the user can perform an operation or not may depend on various things, including the users authorizations to interact with this resource and the internal configuration of the process engine.",
        "description" : "",
        "operationId" : "getGroupGetGroupMembersResourceAvailableOperations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the group.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo3292",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResourceOptionsDtoSwagger"
            }
          }
        }
      }
    },
    "/group/{id}/members/{userId}" : {
      "put" : {
        "tags" : [ "Group" ],
        "summary" : "Adds a member to a group.",
        "description" : "",
        "operationId" : "getGroupGetGroupMembersResourceCreateGroupMember",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the group.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "The id of user to add to the group.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "Group" ],
        "summary" : "Removes a member from a group.",
        "description" : "",
        "operationId" : "getGroupGetGroupMembersResourceDeleteGroupMember",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the group.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "The id of user to remove from the group.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/history/cleanup" : {
      "post" : {
        "tags" : [ "History" ],
        "summary" : "Schedules asynchronous history cleanup (See History cleanup",
        "description" : "",
        "operationId" : "cleanupAsync",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "immediatelyDue",
          "in" : "query",
          "description" : "Parameter immediatelyDue",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JobDto"
            }
          }
        }
      }
    },
    "/identity-link-log" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic Identity Links",
        "description" : "",
        "operationId" : "getHistoricIdentityLinksList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo1060",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Parameter firstResult",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Parameter maxResults",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/identity-link-log/count" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic Identity Links Count",
        "description" : "",
        "operationId" : "getHistoricIdentityLinksCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      }
    },
    "/identity/groups" : {
      "get" : {
        "tags" : [ "Identity" ],
        "summary" : "Gets the groups of a user by id and includes all users that share a group with the given user.",
        "description" : "",
        "operationId" : "getGroupInfo",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "query",
          "description" : "The id of the user to get the groups for.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GroupInfoDtoSwagger"
            }
          }
        }
      }
    },
    "/identity/verify" : {
      "post" : {
        "tags" : [ "Identity" ],
        "summary" : "Verifies that user credentials are valid.",
        "description" : "",
        "operationId" : "verifyUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter basicUserCredentialsDto9369",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BasicUserCredentialsDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AuthenticationResult"
            }
          }
        }
      }
    },
    "/incident" : {
      "get" : {
        "tags" : [ "Incident" ],
        "summary" : "Queries for incidents that fulfill given parameters.\nThe size of the result set can be retrieved by using the Get Incident Count",
        "description" : "",
        "operationId" : "getIncidentsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo7967",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Parameter firstResult",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Parameter maxResults",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/incident/count" : {
      "get" : {
        "tags" : [ "Incident" ],
        "summary" : "Queries for the number of incidents that fulfill given parameters.\nTakes the same parameters as the Get Incidents",
        "description" : "",
        "operationId" : "getIncidentsCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      }
    },
    "/job" : {
      "get" : {
        "tags" : [ "Job" ],
        "summary" : "Queries for jobs that fulfill given parameters.\nThe size of the result set can be retrieved by using the Get Job Count",
        "description" : "",
        "operationId" : "getJobsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo6915",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Job" ],
        "summary" : "Queries for jobs that fulfill given parameters. This method is slightly more powerful than the Get JobsString, Number or Boolean.",
        "description" : "",
        "operationId" : "queryJobsList",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter jobQueryDto3246",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/JobQueryDto"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/job-definition" : {
      "get" : {
        "tags" : [ "Job" ],
        "summary" : "Queries for job definitions that fulfill given parameters.\nThe size of the result set can be retrieved by using the Get Job Definition Count",
        "description" : "",
        "operationId" : "getJobDefinitionsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo4584",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Parameter firstResult",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Parameter maxResults",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Job" ],
        "summary" : "Queries for job definitions that fulfill given parameters. This method is slightly more powerful than the Get Job DefinitionsString, Number or Boolean.",
        "description" : "",
        "operationId" : "queryJobDefinitionsList",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter jobDefinitionQueryDto2959",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/JobDefinitionQueryDto"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/job-definition/count" : {
      "get" : {
        "tags" : [ "Job" ],
        "summary" : "Queries for the number of job definitions that fulfill given parameters.\nTakes the same parameters as the Get Job Definitions",
        "description" : "",
        "operationId" : "getJobDefinitionsCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Job" ],
        "summary" : "Queries for the number of job definitions that fulfill given parameters. This method takes the same message body as the Get Job Definitions (POST)Get Job Definition Count",
        "description" : "",
        "operationId" : "queryJobDefinitionsCount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter jobDefinitionQueryDto8246",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/JobDefinitionQueryDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      }
    },
    "/job-definition/suspended" : {
      "put" : {
        "tags" : [ "Job" ],
        "summary" : "Activates or suspends job definitions with the given process definition key.",
        "description" : "",
        "operationId" : "updateSuspensionState",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter jobDefinitionSuspensionStateDto1457",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/JobDefinitionSuspensionStateDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/job-definition/{id}" : {
      "get" : {
        "tags" : [ "Job" ],
        "summary" : "Retrieves a job definition by id, according to the `JobDefinition` interface in the engine.",
        "description" : "",
        "operationId" : "getJobDefinitionGetJobDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the job definition to be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JobDefinitionDtoSwagger"
            }
          }
        }
      }
    },
    "/job-definition/{id}/jobPriority" : {
      "put" : {
        "tags" : [ "Job" ],
        "summary" : "Sets an overriding execution priority for jobs with the given definition id. Optionally, the priorities of all the definition's existing jobs are updated accordingly. The priority can be reset by setting it to null, meaning that a new job's priority will not be determined based on its definition's priority any longer. See the user guide on job prioritization",
        "description" : "",
        "operationId" : "getJobDefinitionSetJobPriority",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the job definition to be updated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter jobDefinitionPriorityDto3420",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/JobDefinitionPriorityDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/job-definition/{id}/retries" : {
      "put" : {
        "tags" : [ "Job" ],
        "summary" : "Sets the number of retries of all failed jobs associated with the given job definition id.",
        "description" : "",
        "operationId" : "getJobDefinitionSetJobRetries",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the job definition to be retrieved.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter retriesDto9234",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RetriesDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/job-definition/{id}/suspended" : {
      "put" : {
        "tags" : [ "Job" ],
        "summary" : "Activates or suspends a given job definition by id.",
        "description" : "",
        "operationId" : "getJobDefinitionUpdateSuspensionState",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the job definition to activate or suspend.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter jobDefinitionSuspensionStateDto5265",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/JobDefinitionSuspensionStateDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/job-log" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic Job Logs",
        "description" : "",
        "operationId" : "getHistoricJobLogsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo8859",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Parameter firstResult",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Parameter maxResults",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Historic" ],
        "summary" : "Query Historic Job Logs",
        "description" : "",
        "operationId" : "queryHistoricJobLogsList",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter historicJobLogQueryDto4080",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoricJobLogQueryDto"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Parameter firstResult",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Parameter maxResults",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/job-log/count" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic Job Logs Count",
        "description" : "",
        "operationId" : "getHistoricJobLogsCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Historic" ],
        "summary" : "Query Historic Job Logs Count",
        "description" : "",
        "operationId" : "queryHistoricJobLogsCount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter historicJobLogQueryDto5387",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoricJobLogQueryDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      }
    },
    "/job-log/{id}" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic Job Log",
        "description" : "",
        "operationId" : "getHistoricJobLogGetHistoricJobLog",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HistoricJobLogDtoSwagger"
            }
          }
        }
      }
    },
    "/job-log/{id}/stacktrace" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Stacktrace",
        "description" : "",
        "operationId" : "getHistoricJobLogGetStacktrace",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/job/count" : {
      "get" : {
        "tags" : [ "Job" ],
        "summary" : "Queries for the number of jobs that fulfill given parameters.\nTakes the same parameters as the Get Jobs",
        "description" : "",
        "operationId" : "getJobsCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Job" ],
        "summary" : "Queries for jobs that fulfill given parameters. This method takes the same message body as the Get Jobs (POST)Get Job Count",
        "description" : "",
        "operationId" : "queryJobsCount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter jobQueryDto7456",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/JobQueryDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      }
    },
    "/job/retries" : {
      "post" : {
        "tags" : [ "Job" ],
        "summary" : "Create a batch to set retries of jobs asynchronously.",
        "description" : "",
        "operationId" : "setRetries",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter setJobRetriesDto7619",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SetJobRetriesDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BatchDto"
            }
          }
        }
      }
    },
    "/job/suspended" : {
      "put" : {
        "tags" : [ "Job" ],
        "summary" : "Activates or suspends jobs with the given process instance id.",
        "description" : "",
        "operationId" : "updateSuspensionState",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter jobSuspensionStateDto1046",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/JobSuspensionStateDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/job/{id}" : {
      "get" : {
        "tags" : [ "Job" ],
        "summary" : "Retrieves a job by id, according to the `Job` interface in the engine.",
        "description" : "",
        "operationId" : "getJobGetJob",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the job to be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JobDtoSwagger"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Job" ],
        "summary" : "Deletes a job by id.",
        "description" : "",
        "operationId" : "getJobDeleteJob",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the job to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/job/{id}/duedate" : {
      "put" : {
        "tags" : [ "Job" ],
        "summary" : "Updates the due date of a job by id.",
        "description" : "",
        "operationId" : "getJobSetJobDuedate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the job to be updated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter jobDuedateDto4797",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/JobDuedateDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/job/{id}/execute" : {
      "post" : {
        "tags" : [ "Job" ],
        "summary" : "Executes a job by id. Note: The execution of the job happens synchronously in the same thread.",
        "description" : "",
        "operationId" : "getJobExecuteJob",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the job to be executed.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/job/{id}/priority" : {
      "put" : {
        "tags" : [ "Job" ],
        "summary" : "Sets the execution priority of a job by id.",
        "description" : "",
        "operationId" : "getJobSetJobPriority",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the job to be updated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter priorityDto8353",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PriorityDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/job/{id}/retries" : {
      "put" : {
        "tags" : [ "Job" ],
        "summary" : "Sets the retries of the job to the given number of retries by id.",
        "description" : "",
        "operationId" : "getJobSetJobRetries",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the job to be updated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter retriesDto2721",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RetriesDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/job/{id}/stacktrace" : {
      "get" : {
        "tags" : [ "Job" ],
        "summary" : "Retrieves the exception stacktrace corresponding to the passed job id.",
        "description" : "",
        "operationId" : "getJobGetStacktrace",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the job to get the exception stacktrace for.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/job/{id}/suspended" : {
      "put" : {
        "tags" : [ "Job" ],
        "summary" : "Activates or suspends a given job by id.",
        "description" : "",
        "operationId" : "getJobUpdateSuspensionState",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the job to activate or suspend.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter jobSuspensionStateDto8484",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/JobSuspensionStateDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/message" : {
      "post" : {
        "tags" : [ "Message" ],
        "summary" : "Correlates a message to the process engine to either trigger a message start event or an intermediate message catching event.\nInternally this maps to the engine's message correlation builder methods `MessageCorrelationBuilder#correlateWithResult()` and `MessageCorrelationBuilder#correlateAllWithResult()`.\nFor more information about the correlation behavior, see the Message EventsBPMN 2.0 Implementation Reference",
        "description" : "",
        "operationId" : "deliverMessage",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter correlationMessageDto9226",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CorrelationMessageDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/metrics" : {
      "get" : {
        "tags" : [ "Metrics" ],
        "summary" : "Retrieves a list of metrics, aggregated for a given interval.",
        "description" : "",
        "operationId" : "intervalList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo6332",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/metrics/{name}/sum" : {
      "get" : {
        "tags" : [ "Metrics" ],
        "summary" : "Sum",
        "description" : "",
        "operationId" : "getMetricsSum",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "Parameter name",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo8611",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MetricsResultDtoSwagger"
            }
          }
        }
      }
    },
    "/migration/execute" : {
      "post" : {
        "tags" : [ "Migration" ],
        "summary" : "Executes a migration plan synchronously for multiple process instances. To execute a migration plan asynchronously,\nuse the Execute Migration Plan Async (Batch)",
        "description" : "",
        "operationId" : "executeMigrationPlan",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter migrationExecutionDto1168",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MigrationExecutionDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/migration/executeAsync" : {
      "post" : {
        "tags" : [ "Migration" ],
        "summary" : "Executes a migration plan asynchronously (batch) for multiple process instances.\nTo execute a migration plan synchronously, use the Execute Migration Plan",
        "description" : "",
        "operationId" : "executeMigrationPlanAsync",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter migrationExecutionDto4005",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MigrationExecutionDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BatchDto"
            }
          }
        }
      }
    },
    "/migration/generate" : {
      "post" : {
        "tags" : [ "Migration" ],
        "summary" : "Generates a migration plan for two process definitions. The generated migration\nplan contains migration instructions which map equal activities between the\ntwo process definitions.",
        "description" : "",
        "operationId" : "generateMigrationPlan",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter migrationPlanGenerationDto1025",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MigrationPlanGenerationDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MigrationPlanDtoSwagger"
            }
          }
        }
      }
    },
    "/migration/validate" : {
      "post" : {
        "tags" : [ "Migration" ],
        "summary" : "Validates a migration plan statically without executing it. This\ncorresponds to the creation time validation\nguide.",
        "description" : "",
        "operationId" : "validateMigrationPlan",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter migrationPlanDto1834",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MigrationPlanDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MigrationPlanReportDto"
            }
          }
        }
      }
    },
    "/modification/execute" : {
      "post" : {
        "tags" : [ "Modification" ],
        "summary" : "Execute Modification",
        "description" : "",
        "operationId" : "executeModification",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter modificationDto1554",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ModificationDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/modification/executeAsync" : {
      "post" : {
        "tags" : [ "Modification" ],
        "summary" : "Executes a modification asynchronously for multiple process instances. To execute a modification synchronously,\nuse the Execute Modification",
        "description" : "",
        "operationId" : "executeModificationAsync",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter modificationDto1317",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ModificationDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BatchDto"
            }
          }
        }
      }
    },
    "/process-definition" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Queries for process definitions that fulfill given parameters. Parameters may be the properties of process definitions, such as the name, key or version.\nThe size of the result set can be retrieved by using the Get Definition Count",
        "description" : "",
        "operationId" : "getProcessDefinitionsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo2324",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/process-definition/count" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Requests the number of process definitions that fulfill the query criteria. Takes the same filtering parameters as the\nGet Definitions",
        "description" : "",
        "operationId" : "getProcessDefinitionsCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      }
    },
    "/process-definition/key/{key}" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Get Process Definition",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyGetProcessDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessDefinitionDtoSwagger"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Process" ],
        "summary" : "Delete Process Definition",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyDeleteProcessDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "cascade",
          "in" : "query",
          "description" : "Parameter cascade",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "skipCustomListeners",
          "in" : "query",
          "description" : "Parameter skipCustomListeners",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-definition/key/{key}/diagram" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Get Process Definition Diagram",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyGetProcessDefinitionDiagram",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-definition/key/{key}/form-variables" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Get Form Variables",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyGetFormVariablesMap",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "variableNames",
          "in" : "query",
          "description" : "Parameter variableNames",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deserializeValues",
          "in" : "query",
          "description" : "Parameter deserializeValues",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/process-definition/key/{key}/history-time-to-live" : {
      "put" : {
        "tags" : [ "Process" ],
        "summary" : "Update History Time To Live",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyUpdateHistoryTimeToLive",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter historyTimeToLiveDto1059",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoryTimeToLiveDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-definition/key/{key}/rendered-form" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Get Rendered Form",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyGetRenderedForm",
        "produces" : [ "application/xhtml+xml" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-definition/key/{key}/restart" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Restart Process Instance",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyRestartProcessInstance",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter restartProcessInstanceDto8678",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RestartProcessInstanceDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-definition/key/{key}/restart-async" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Restart Process Instance Async",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyRestartProcessInstanceAsync",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter restartProcessInstanceDto2159",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RestartProcessInstanceDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BatchDtoSwagger"
            }
          }
        }
      }
    },
    "/process-definition/key/{key}/start" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Start Process Instance",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyStartProcessInstance",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo3485",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter startProcessInstanceDto9678",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StartProcessInstanceDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessInstanceDtoSwagger"
            }
          }
        }
      }
    },
    "/process-definition/key/{key}/startForm" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Get Start Form",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyGetStartForm",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FormDtoSwagger"
            }
          }
        }
      }
    },
    "/process-definition/key/{key}/statistics" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Get Activity Statistics",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyGetActivityStatisticsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "failedJobs",
          "in" : "query",
          "description" : "Parameter failedJobs",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "incidents",
          "in" : "query",
          "description" : "Parameter incidents",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "incidentsForType",
          "in" : "query",
          "description" : "Parameter incidentsForType",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/process-definition/key/{key}/submit-form" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Submit Form",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeySubmitForm",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo960",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter startProcessInstanceDto7782",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StartProcessInstanceDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessInstanceDtoSwagger"
            }
          }
        }
      }
    },
    "/process-definition/key/{key}/suspended" : {
      "put" : {
        "tags" : [ "Process" ],
        "summary" : "Update Suspension State",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyUpdateSuspensionState",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter processDefinitionSuspensionStateDto1430",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProcessDefinitionSuspensionStateDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-definition/key/{key}/tenant-id/{tenantId}" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Get Process Definition",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyAndTenantIdGetProcessDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessDefinitionDtoSwagger"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Process" ],
        "summary" : "Delete Process Definition",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyAndTenantIdDeleteProcessDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "cascade",
          "in" : "query",
          "description" : "Parameter cascade",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "skipCustomListeners",
          "in" : "query",
          "description" : "Parameter skipCustomListeners",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-definition/key/{key}/tenant-id/{tenantId}/diagram" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Get Process Definition Diagram",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyAndTenantIdGetProcessDefinitionDiagram",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-definition/key/{key}/tenant-id/{tenantId}/form-variables" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Get Form Variables",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyAndTenantIdGetFormVariablesMap",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "variableNames",
          "in" : "query",
          "description" : "Parameter variableNames",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deserializeValues",
          "in" : "query",
          "description" : "Parameter deserializeValues",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/process-definition/key/{key}/tenant-id/{tenantId}/history-time-to-live" : {
      "put" : {
        "tags" : [ "Process" ],
        "summary" : "Update History Time To Live",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyAndTenantIdUpdateHistoryTimeToLive",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter historyTimeToLiveDto4977",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoryTimeToLiveDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-definition/key/{key}/tenant-id/{tenantId}/rendered-form" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Get Rendered Form",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyAndTenantIdGetRenderedForm",
        "produces" : [ "application/xhtml+xml" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-definition/key/{key}/tenant-id/{tenantId}/restart" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Restart Process Instance",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyAndTenantIdRestartProcessInstance",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter restartProcessInstanceDto58",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RestartProcessInstanceDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-definition/key/{key}/tenant-id/{tenantId}/restart-async" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Restart Process Instance Async",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyAndTenantIdRestartProcessInstanceAsync",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter restartProcessInstanceDto4679",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RestartProcessInstanceDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BatchDtoSwagger"
            }
          }
        }
      }
    },
    "/process-definition/key/{key}/tenant-id/{tenantId}/start" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Start Process Instance",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyAndTenantIdStartProcessInstance",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo3332",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter startProcessInstanceDto87",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StartProcessInstanceDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessInstanceDtoSwagger"
            }
          }
        }
      }
    },
    "/process-definition/key/{key}/tenant-id/{tenantId}/startForm" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Get Start Form",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyAndTenantIdGetStartForm",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FormDtoSwagger"
            }
          }
        }
      }
    },
    "/process-definition/key/{key}/tenant-id/{tenantId}/statistics" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Get Activity Statistics",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyAndTenantIdGetActivityStatisticsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "failedJobs",
          "in" : "query",
          "description" : "Parameter failedJobs",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "incidents",
          "in" : "query",
          "description" : "Parameter incidents",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "incidentsForType",
          "in" : "query",
          "description" : "Parameter incidentsForType",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/process-definition/key/{key}/tenant-id/{tenantId}/submit-form" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Submit Form",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyAndTenantIdSubmitForm",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo6070",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter startProcessInstanceDto6658",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StartProcessInstanceDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessInstanceDtoSwagger"
            }
          }
        }
      }
    },
    "/process-definition/key/{key}/tenant-id/{tenantId}/suspended" : {
      "put" : {
        "tags" : [ "Process" ],
        "summary" : "Update Suspension State",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyAndTenantIdUpdateSuspensionState",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter processDefinitionSuspensionStateDto964",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProcessDefinitionSuspensionStateDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-definition/key/{key}/tenant-id/{tenantId}/xml" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Get Process Definition Bpmn 20 Xml",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyAndTenantIdGetProcessDefinitionBpmn20Xml",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "description" : "Parameter tenantId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessDefinitionDiagramDtoSwagger"
            }
          }
        }
      }
    },
    "/process-definition/key/{key}/xml" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Get Process Definition Bpmn 20 Xml",
        "description" : "",
        "operationId" : "getProcessDefinitionByKeyGetProcessDefinitionBpmn20Xml",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "key",
          "in" : "path",
          "description" : "Parameter key",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessDefinitionDiagramDtoSwagger"
            }
          }
        }
      }
    },
    "/process-definition/statistics" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Retrieves runtime statistics of the process engine, grouped by process definitions.\nThese statistics include the number of running process instances, optionally the number of failed jobs and also optionally the number of incidents either grouped by incident types or for a specific incident type.\n This does not include historic data.",
        "description" : "",
        "operationId" : "getStatisticsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "failedJobs",
          "in" : "query",
          "description" : "Whether to include the number of failed jobs in the result or not. Valid values are true or false.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "incidents",
          "in" : "query",
          "description" : "Valid values for this property are true or false. If this property has been set to true the result will include the corresponding number of incidents for each occurred incident type. If it is set to false, the incidents will not be included in the result. Cannot be used in combination with incidentsForType.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "incidentsForType",
          "in" : "query",
          "description" : "If this property has been set with any incident type (i.e., a string value) the result will only include the number of incidents for the assigned incident type. Cannot be used in combination with incidents. See the User Guide for a list of incident types.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/process-definition/suspended" : {
      "put" : {
        "tags" : [ "Process" ],
        "summary" : "Activates or suspends process definitions with the given process definition key.",
        "description" : "",
        "operationId" : "updateSuspensionState",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter processDefinitionSuspensionStateDto1958",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProcessDefinitionSuspensionStateDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-definition/{id}" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Retrieves a process definition according to the `ProcessDefinition` interface in the engine.",
        "description" : "",
        "operationId" : "getProcessDefinitionByIdGetProcessDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the process definition to be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessDefinitionDtoSwagger"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Process" ],
        "summary" : "Deletes a process definition from a deployment by id.",
        "description" : "",
        "operationId" : "getProcessDefinitionByIdDeleteProcessDefinition",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the process definition to be deleted.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "cascade",
          "in" : "query",
          "description" : "true, if all process instances, historic process instances and jobs for this process definition should be deleted.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "skipCustomListeners",
          "in" : "query",
          "description" : "true, if only the built-in ExecutionListeners should be notified with the end event.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-definition/{id}/diagram" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Retrieves the diagram of a process definition.",
        "description" : "",
        "operationId" : "getProcessDefinitionByIdGetProcessDefinitionDiagram",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the process definition.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-definition/{id}/form-variables" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Retrieves the start form variables for a process definition (only if they are defined via the Generated Task Form\nThe start form variables take form data specified on the start event into account. If form fields are defined,\nthe variable types and default values of the form fields are taken into account.",
        "description" : "",
        "operationId" : "getProcessDefinitionByIdGetFormVariablesMap",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the process definition to retrieve the variables for.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "variableNames",
          "in" : "query",
          "description" : "A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list. It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched. If the query parameter contains non-existent variable names, the variable names are ignored.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deserializeValues",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/process-definition/{id}/history-time-to-live" : {
      "put" : {
        "tags" : [ "Process" ],
        "summary" : "Updates history time to live for process definition. The field is used within History cleanup",
        "description" : "",
        "operationId" : "getProcessDefinitionByIdUpdateHistoryTimeToLive",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the process definition to change history time to live.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter historyTimeToLiveDto9661",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoryTimeToLiveDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-definition/{id}/rendered-form" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Retrieves the rendered form for a process definition. This method can be used for getting the HTML rendering of a Generated Task Form",
        "description" : "",
        "operationId" : "getProcessDefinitionByIdGetRenderedForm",
        "produces" : [ "application/xhtml+xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the process definition to get the rendered start form for.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-definition/{id}/restart" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Restarts process instances that were canceled or terminated synchronously. To execute the restart asynchronously,\nuse the Restart Process Instance Async",
        "description" : "",
        "operationId" : "getProcessDefinitionByIdRestartProcessInstance",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the process definition of the process instances to restart.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter restartProcessInstanceDto6664",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RestartProcessInstanceDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-definition/{id}/restart-async" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Restarts process instances that were canceled or terminated asynchronously. To execute the restart synchronously,\nuse the Restart Process Instance",
        "description" : "",
        "operationId" : "getProcessDefinitionByIdRestartProcessInstanceAsync",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the process definition of the process instances to restart.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter restartProcessInstanceDto8300",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RestartProcessInstanceDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BatchDtoSwagger"
            }
          }
        }
      }
    },
    "/process-definition/{id}/start" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Instantiates a given process definition. Process variables and business key may be supplied in the request body.",
        "description" : "",
        "operationId" : "getProcessDefinitionByIdStartProcessInstance",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the process definition to be retrieved.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo7713",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter startProcessInstanceDto763",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StartProcessInstanceDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessInstanceDtoSwagger"
            }
          }
        }
      }
    },
    "/process-definition/{id}/startForm" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Retrieves the key of the start form for a process definition. The form key corresponds to the `FormData#formKey` property in the engine.",
        "description" : "",
        "operationId" : "getProcessDefinitionByIdGetStartForm",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the process definition to get the start form for.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FormDtoSwagger"
            }
          }
        }
      }
    },
    "/process-definition/{id}/statistics" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Retrieves runtime statistics of a given process definition, grouped by activities.\nThese statistics include the number of running activity instances, optionally the number of failed jobs and also optionally the number of incidents either grouped by incident types or for a specific incident type.\n This does not include historic data.",
        "description" : "",
        "operationId" : "getHistoricActivityStatisticsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the process definition.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "canceled",
          "in" : "query",
          "description" : "Parameter canceled",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "finished",
          "in" : "query",
          "description" : "Parameter finished",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "completeScope",
          "in" : "query",
          "description" : "Parameter completeScope",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "Parameter sortBy",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "description" : "Parameter sortOrder",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/process-definition/{id}/submit-form" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Starts a process instance using a set of process variables and the business key. If the start event has Form Field Metadata defined, the process engine will perform backend validation for any form fields which have validators defined. See Documentation on Generated Task Forms",
        "description" : "",
        "operationId" : "getProcessDefinitionByIdSubmitForm",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the process definition to submit the form for.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo1966",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter startProcessInstanceDto2639",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/StartProcessInstanceDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessInstanceDtoSwagger"
            }
          }
        }
      }
    },
    "/process-definition/{id}/suspended" : {
      "put" : {
        "tags" : [ "Process" ],
        "summary" : "Activates or suspends a given process definition by id or by latest version of process definition key.",
        "description" : "",
        "operationId" : "getProcessDefinitionByIdUpdateSuspensionState",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the process definition to activate or suspend.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter processDefinitionSuspensionStateDto6078",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProcessDefinitionSuspensionStateDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-definition/{id}/xml" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Retrieves the BPMN 2.0 XML of a process definition.",
        "description" : "",
        "operationId" : "getProcessDefinitionByIdGetProcessDefinitionBpmn20Xml",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the process definition.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessDefinitionDiagramDtoSwagger"
            }
          }
        }
      }
    },
    "/process-instance" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Queries for process instances that fulfill given parameters.\nParameters may be static as well as dynamic runtime properties of process instances.\nThe size of the result set can be retrieved by using the Get Instance Count",
        "description" : "",
        "operationId" : "getHistoricProcessInstancesList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo1812",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Historic" ],
        "summary" : "Queries for process instances that fulfill given parameters through a JSON object.\nThis method is slightly more powerful than the Get Instances\nfiltering by multiple process variables of types `String`, `Number` or `Boolean`.",
        "description" : "",
        "operationId" : "queryHistoricProcessInstancesList",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter historicProcessInstanceQueryDto3692",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoricProcessInstanceQueryDto"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results, if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/process-instance/count" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Queries for the number of process instances that fulfill given parameters.\nTakes the same parameters as the Get Instances",
        "description" : "",
        "operationId" : "getHistoricProcessInstancesCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Historic" ],
        "summary" : "Queries for the number of process instances that fulfill the given parameters.\nThis method takes the same message body as the Get Instances (POST)\nand therefore it is slightly more powerful than the Get Instance Count",
        "description" : "",
        "operationId" : "queryHistoricProcessInstancesCount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter historicProcessInstanceQueryDto7735",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoricProcessInstanceQueryDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      }
    },
    "/process-instance/delete" : {
      "post" : {
        "tags" : [ "Historic" ],
        "summary" : "Deletes multiple process instances asynchronously (batch).",
        "description" : "",
        "operationId" : "deleteAsync",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter deleteHistoricProcessInstancesDto4866",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DeleteHistoricProcessInstancesDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BatchDtoSwagger"
            }
          }
        }
      }
    },
    "/process-instance/delete-historic-query-based" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Deletes a set of process instances asynchronously (batch) based on a historic process instance query.",
        "description" : "",
        "operationId" : "deleteAsyncHistoricQueryBased",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter deleteProcessInstancesDto2461",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DeleteProcessInstancesDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BatchDtoSwagger"
            }
          }
        }
      }
    },
    "/process-instance/job-retries" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Create a batch to set retries of jobs associated with given processes asynchronously.",
        "description" : "",
        "operationId" : "setRetriesByProcess",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter setJobRetriesByProcessDto1691",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SetJobRetriesByProcessDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BatchDtoSwagger"
            }
          }
        }
      }
    },
    "/process-instance/job-retries-historic-query-based" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Create a batch to set retries of jobs asynchronously based on a historic process instance query.",
        "description" : "",
        "operationId" : "setRetriesByProcessHistoricQueryBased",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter setJobRetriesByProcessDto4675",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SetJobRetriesByProcessDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BatchDtoSwagger"
            }
          }
        }
      }
    },
    "/process-instance/report" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic Process Instances Report",
        "description" : "",
        "operationId" : "getHistoricProcessInstancesReport",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-instance/suspended" : {
      "put" : {
        "tags" : [ "Process" ],
        "summary" : "Activates or suspends process instances with the given process definition key.",
        "description" : "",
        "operationId" : "updateSuspensionState",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter processInstanceSuspensionStateDto5434",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProcessInstanceSuspensionStateDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-instance/{id}" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Retrieves a process instance by id, according to the `ProcessInstance` interface in the engine.",
        "description" : "",
        "operationId" : "getHistoricProcessInstanceGetHistoricProcessInstance",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the process instance to be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HistoricProcessInstanceDtoSwagger"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Historic" ],
        "summary" : "Deletes a running process instance by id.",
        "description" : "",
        "operationId" : "getHistoricProcessInstanceDeleteHistoricProcessInstance",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the process instance to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-instance/{id}/activity-instances" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Retrieves an Activity Instance (Tree) for a given process instance by id.",
        "description" : "",
        "operationId" : "getProcessInstanceGetActivityInstanceTree",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the process instance for which the activity instance should be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ActivityInstanceDtoSwagger"
            }
          }
        }
      }
    },
    "/process-instance/{id}/modification" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "POST `/process-instance/{id}/modification`",
        "description" : "",
        "operationId" : "getProcessInstanceModifyProcessInstance",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the process instance to modify.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter processInstanceModificationDto8149",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProcessInstanceModificationDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-instance/{id}/suspended" : {
      "put" : {
        "tags" : [ "Process" ],
        "summary" : "Activates or suspends a given process instance by id.",
        "description" : "",
        "operationId" : "getProcessInstanceUpdateSuspensionState",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the process instance to activate or suspend.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter processInstanceSuspensionStateDto9690",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProcessInstanceSuspensionStateDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-instance/{id}/variables" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Retrieves all variables of a given process instance by id.",
        "description" : "",
        "operationId" : "getProcessInstanceGetVariablesResourceGetVariablesMap",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the process instance to retrieve the variables from.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deserializeValues",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Updates or deletes the variables of a process instance by id.\nUpdates precede deletions. So, if a variable is updated AND deleted, the deletion overrides the update.",
        "description" : "",
        "operationId" : "getProcessInstanceGetVariablesResourceModifyVariables",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the process instance to set variables for.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter patchVariablesDto5856",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PatchVariablesDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-instance/{id}/variables/{varId}" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Get Variable",
        "description" : "",
        "operationId" : "getProcessInstanceGetVariablesResourceGetVariable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deserializeValue",
          "in" : "query",
          "description" : "Parameter deserializeValue",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VariableValueDtoSwagger"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Process" ],
        "summary" : "Put Variable",
        "description" : "",
        "operationId" : "getProcessInstanceGetVariablesResourcePutVariable",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter variableValueDto6913",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VariableValueDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "Process" ],
        "summary" : "Delete Variable",
        "description" : "",
        "operationId" : "getProcessInstanceGetVariablesResourceDeleteVariable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/process-instance/{id}/variables/{varId}/data" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Get Variable Binary",
        "description" : "",
        "operationId" : "getProcessInstanceGetVariablesResourceGetVariableBinary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Set Binary Variable",
        "description" : "",
        "operationId" : "getProcessInstanceGetVariablesResourceSetBinaryVariable",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter multipartFormData3806",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipartFormData"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/task" : {
      "get" : {
        "tags" : [ "Task" ],
        "summary" : "Queries for tasks that fulfill a given filter.\nThe size of the result set can be retrieved by using the Get Task Count",
        "description" : "",
        "operationId" : "getTasks",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Parameter firstResult",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Parameter maxResults",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Task" ],
        "summary" : "Queries for tasks that fulfill a given filter.\nThis method is slightly more powerful than the Get Tasks\nfiltering by multiple process or task variables of types `String`, `Number` or `Boolean`.\nThe size of the result set can be retrieved by using the Get Task Count (POST)",
        "description" : "",
        "operationId" : "queryTasksList",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter taskQueryDto317",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TaskQueryDto"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results, if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/task/count" : {
      "get" : {
        "tags" : [ "Task" ],
        "summary" : "Retrieves the number of tasks that fulfill a provided filter.\nCorresponds to the size of the result set when using the Get Tasks",
        "description" : "",
        "operationId" : "getTasksCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Task" ],
        "summary" : "Retrieves the number of tasks that fulfill the given filter.\nCorresponds to the size of the result set of the Get Tasks (POST)",
        "description" : "",
        "operationId" : "queryTasksCount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter taskQueryDto1950",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TaskQueryDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      }
    },
    "/task/create" : {
      "post" : {
        "tags" : [ "Task" ],
        "summary" : "Creates a new task.",
        "description" : "",
        "operationId" : "createTask",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter taskDto3383",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TaskDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/task/report" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Get Historic Task Instance Report",
        "description" : "",
        "operationId" : "getHistoricTaskInstanceReport",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/task/report/candidate-group-count" : {
      "get" : {
        "tags" : [ "Task" ],
        "summary" : "Retrieves the number of tasks for each candidate group.",
        "description" : "",
        "operationId" : "getTaskReportResourceGetTaskCountByCandidateGroupReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter request6898",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Request"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/task/{id}" : {
      "get" : {
        "tags" : [ "Task" ],
        "summary" : "Retrieves a task by id.",
        "description" : "",
        "operationId" : "getTaskGetTask",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to be retrieved.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter request6252",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Request"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Task" ],
        "summary" : "Update Task",
        "description" : "",
        "operationId" : "getTaskUpdateTask",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter taskDto4594",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TaskDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "Task" ],
        "summary" : "Delete Task",
        "description" : "",
        "operationId" : "getTaskDeleteTask",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/task/{id}/assignee" : {
      "post" : {
        "tags" : [ "Task" ],
        "summary" : "Changes the assignee of a task to a specific user.",
        "description" : "",
        "operationId" : "getTaskSetAssignee",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to set the assignee for.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter userIdDto7918",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserIdDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/task/{id}/attachment" : {
      "get" : {
        "tags" : [ "Task" ],
        "summary" : "Gets the attachments for a task.",
        "description" : "",
        "operationId" : "getTaskGetAttachmentResourceGetAttachmentsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to retrieve the attachments for.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/task/{id}/attachment/create" : {
      "post" : {
        "tags" : [ "Task" ],
        "summary" : "Creates an attachment for a task.",
        "description" : "",
        "operationId" : "getTaskGetAttachmentResourceAddAttachment",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to add the attachment to.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo1493",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter multipartFormData7731",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipartFormData"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AttachmentDtoSwagger"
            }
          }
        }
      }
    },
    "/task/{id}/attachment/{attachmentId}" : {
      "get" : {
        "tags" : [ "Task" ],
        "summary" : "Retrieves a task attachment by task id and attachment id.",
        "description" : "",
        "operationId" : "getTaskGetAttachmentResourceGetAttachment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "The id of the attachment to be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AttachmentDtoSwagger"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Task" ],
        "summary" : "Removes an attachment from a task by id.",
        "description" : "",
        "operationId" : "getTaskGetAttachmentResourceDeleteAttachment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "The id of the attachment to be removed.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/task/{id}/attachment/{attachmentId}/data" : {
      "get" : {
        "tags" : [ "Task" ],
        "summary" : "Retrieves the binary content of a task attachment by task id and attachment id.",
        "description" : "",
        "operationId" : "getTaskGetAttachmentResourceGetAttachmentData",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "The id of the attachment to be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/InputStream"
            }
          }
        }
      }
    },
    "/task/{id}/claim" : {
      "post" : {
        "tags" : [ "Task" ],
        "summary" : "Claims a task for a specific user.",
        "description" : "",
        "operationId" : "getTaskClaim",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to claim.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter userIdDto5898",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserIdDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/task/{id}/comment" : {
      "get" : {
        "tags" : [ "Task" ],
        "summary" : "Gets the comments for a task by id.",
        "description" : "",
        "operationId" : "getTaskGetTaskCommentResourceGetCommentsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to retrieve the comments for.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/task/{id}/comment/create" : {
      "post" : {
        "tags" : [ "Task" ],
        "summary" : "Creates a comment for a task by id.",
        "description" : "",
        "operationId" : "getTaskGetTaskCommentResourceCreateComment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to add the comment to.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo702",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter commentDto915",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CommentDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CommentDtoSwagger"
            }
          }
        }
      }
    },
    "/task/{id}/comment/{commentId}" : {
      "get" : {
        "tags" : [ "Task" ],
        "summary" : "Retrieves a task comment by task id and comment id.",
        "description" : "",
        "operationId" : "getTaskGetTaskCommentResourceGetComment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "commentId",
          "in" : "path",
          "description" : "The id of the comment to be retrieved.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CommentDtoSwagger"
            }
          }
        }
      }
    },
    "/task/{id}/complete" : {
      "post" : {
        "tags" : [ "Task" ],
        "summary" : "Completes a task and updates process variables.",
        "description" : "",
        "operationId" : "getTaskComplete",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to complete.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter completeTaskDto1698",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CompleteTaskDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/task/{id}/delegate" : {
      "post" : {
        "tags" : [ "Task" ],
        "summary" : "Delegates a task to another user.",
        "description" : "",
        "operationId" : "getTaskDelegate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to delegate.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter userIdDto3286",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserIdDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/task/{id}/form" : {
      "get" : {
        "tags" : [ "Task" ],
        "summary" : "Retrieves the form key for a task. The form key corresponds to the `FormData#formKey` property in the engine.\nThis key can be used to do task-specific form rendering in client applications. Additionally, the context path of the containing process application is returned.",
        "description" : "",
        "operationId" : "getTaskGetForm",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to retrieve the form for.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FormDtoSwagger"
            }
          }
        }
      }
    },
    "/task/{id}/form-variables" : {
      "get" : {
        "tags" : [ "Task" ],
        "summary" : "Retrieves the form variables for a task (only if they are defined via the\nGenerated Task Form\nThe form variables take form data specified on the task into\naccount. If form fields are defined, the variable types and\ndefault values of the form fields are taken into account.",
        "description" : "",
        "operationId" : "getTaskGetFormVariablesMap",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to retrieve the variables for.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "variableNames",
          "in" : "query",
          "description" : "A comma-separated list of variable names. Allows restricting the list of requested variables to the variable names in the list. It is best practice to restrict the list of variables to the variables actually required by the form in order to minimize fetching of data. If the query parameter is ommitted all variables are fetched. If the query parameter contains non-existent variable names, the variable names are ignored.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deserializeValues",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/task/{id}/identity-links" : {
      "get" : {
        "tags" : [ "Task" ],
        "summary" : "Gets the identity links for a task by id, which are the users and groups that are in  relation to it (including assignee and owner).",
        "description" : "",
        "operationId" : "getTaskGetIdentityLinksList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to retrieve the identity links for.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Filter by the type of links to include.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Task" ],
        "summary" : "Adds an identity link to a task by id. Can be used to link any user or group to a task and specify a relation.",
        "description" : "",
        "operationId" : "getTaskAddIdentityLink",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to add a link to.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter identityLinkDto6931",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IdentityLinkDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/task/{id}/identity-links/delete" : {
      "post" : {
        "tags" : [ "Task" ],
        "summary" : "Removes an identity link from a task by id.",
        "description" : "",
        "operationId" : "getTaskDeleteIdentityLink",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to remove a link from.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter identityLinkDto4100",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IdentityLinkDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/task/{id}/localVariables" : {
      "get" : {
        "tags" : [ "Task" ],
        "summary" : "Retrieves all variables of a given task by id.",
        "description" : "",
        "operationId" : "getTaskGetLocalVariablesGetVariablesMap",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to retrieve the variables from.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deserializeValues",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Task" ],
        "summary" : "Updates or deletes the variables in the context of a task.\nUpdates precede deletions. So, if a variable is updated AND deleted, the deletion overrides the update.",
        "description" : "",
        "operationId" : "getTaskGetLocalVariablesModifyVariables",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to set variables for.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter patchVariablesDto6866",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PatchVariablesDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/task/{id}/localVariables/{varId}" : {
      "get" : {
        "tags" : [ "Task" ],
        "summary" : "Get Variable",
        "description" : "",
        "operationId" : "getTaskGetLocalVariablesGetVariable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deserializeValue",
          "in" : "query",
          "description" : "Parameter deserializeValue",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VariableValueDtoSwagger"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Task" ],
        "summary" : "Put Variable",
        "description" : "",
        "operationId" : "getTaskGetLocalVariablesPutVariable",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter variableValueDto6166",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VariableValueDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "Task" ],
        "summary" : "Delete Variable",
        "description" : "",
        "operationId" : "getTaskGetLocalVariablesDeleteVariable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/task/{id}/localVariables/{varId}/data" : {
      "get" : {
        "tags" : [ "Task" ],
        "summary" : "Get Variable Binary",
        "description" : "",
        "operationId" : "getTaskGetLocalVariablesGetVariableBinary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "tags" : [ "Task" ],
        "summary" : "Set Binary Variable",
        "description" : "",
        "operationId" : "getTaskGetLocalVariablesSetBinaryVariable",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter multipartFormData153",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipartFormData"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/task/{id}/rendered-form" : {
      "get" : {
        "tags" : [ "Task" ],
        "summary" : "Retrieves the rendered form for a task. This method can be used to get the HTML rendering of a Generated Task Form",
        "description" : "",
        "operationId" : "getTaskGetRenderedForm",
        "produces" : [ "application/xhtml+xml" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to get the rendered form for.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/task/{id}/resolve" : {
      "post" : {
        "tags" : [ "Task" ],
        "summary" : "Resolves a task and updates execution variables.",
        "description" : "",
        "operationId" : "getTaskResolve",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to resolve.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter completeTaskDto9449",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CompleteTaskDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/task/{id}/submit-form" : {
      "post" : {
        "tags" : [ "Task" ],
        "summary" : "Completes a task and updates process variables using a form submit. There are two difference between this method and the `complete` method:",
        "description" : "",
        "operationId" : "getTaskSubmit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to submit the form for.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter completeTaskDto4236",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CompleteTaskDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/task/{id}/unclaim" : {
      "post" : {
        "tags" : [ "Task" ],
        "summary" : "Resets a task's assignee. If successful, the task is not assigned to a user.",
        "description" : "",
        "operationId" : "getTaskUnclaim",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to unclaim.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/task/{id}/variables" : {
      "get" : {
        "tags" : [ "Task" ],
        "summary" : "Retrieves all variables visible from the task. A variable is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables",
        "description" : "",
        "operationId" : "getTaskGetVariablesGetVariablesMap",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to retrieve the variables from.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deserializeValues",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Task" ],
        "summary" : "Updates or deletes the variables visible from the task.\nUpdates precede deletions. So, if a variable is updated AND deleted, the deletion overrides the update.\nA variable is visible from the task if it is a local task variable or declared in a parent scope of the task. See documentation on visiblity of variables",
        "description" : "",
        "operationId" : "getTaskGetVariablesModifyVariables",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the task to set variables for.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter patchVariablesDto5874",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PatchVariablesDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/task/{id}/variables/{varId}" : {
      "get" : {
        "tags" : [ "Task" ],
        "summary" : "Get Variable",
        "description" : "",
        "operationId" : "getTaskGetVariablesGetVariable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deserializeValue",
          "in" : "query",
          "description" : "Parameter deserializeValue",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VariableValueDtoSwagger"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Task" ],
        "summary" : "Put Variable",
        "description" : "",
        "operationId" : "getTaskGetVariablesPutVariable",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter variableValueDto1661",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/VariableValueDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "Task" ],
        "summary" : "Delete Variable",
        "description" : "",
        "operationId" : "getTaskGetVariablesDeleteVariable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/task/{id}/variables/{varId}/data" : {
      "get" : {
        "tags" : [ "Task" ],
        "summary" : "Get Variable Binary",
        "description" : "",
        "operationId" : "getTaskGetVariablesGetVariableBinary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "tags" : [ "Task" ],
        "summary" : "Set Binary Variable",
        "description" : "",
        "operationId" : "getTaskGetVariablesSetBinaryVariable",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "varId",
          "in" : "path",
          "description" : "Parameter varId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter multipartFormData9029",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipartFormData"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/tenant" : {
      "get" : {
        "tags" : [ "Tenant" ],
        "summary" : "Query for a list of tenants using a list of parameters.\nThe size of the result set can be retrieved by using the Get Tenant Count",
        "description" : "",
        "operationId" : "queryTenantsList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo9680",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "Tenant" ],
        "summary" : "The `/tenant` resource supports two custom OPTIONS requests, one for the resource as such and one for individual tenant instances. The OPTIONS request allows checking for the set of available operations that the currently authenticated user can perform on the `/tenant` resource. If the user can perform an operation or not may depend on various things, including the users authorizations to interact with this resource and the internal configuration of the process engine.",
        "description" : "",
        "operationId" : "availableOperations",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResourceOptionsDto"
            }
          }
        }
      }
    },
    "/tenant/count" : {
      "get" : {
        "tags" : [ "Tenant" ],
        "summary" : "Query for tenants using a list of parameters and retrieves the count.",
        "description" : "",
        "operationId" : "getTenantCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      }
    },
    "/tenant/create" : {
      "post" : {
        "tags" : [ "Tenant" ],
        "summary" : "Create a new tenant.",
        "description" : "",
        "operationId" : "createTenant",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter tenantDto9299",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TenantDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/tenant/{id}" : {
      "get" : {
        "tags" : [ "Tenant" ],
        "summary" : "Retrieves a tenant.",
        "description" : "",
        "operationId" : "getTenantGetTenant",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the tenant to be retrieved.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo6172",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TenantDtoSwagger"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Tenant" ],
        "summary" : "Updates a given tenant.",
        "description" : "",
        "operationId" : "getTenantUpdateTenant",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the tenant.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter tenantDto6178",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TenantDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "Tenant" ],
        "summary" : "Deletes a tenant by id.",
        "description" : "",
        "operationId" : "getTenantDeleteTenant",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the tenant to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "options" : {
        "tags" : [ "Tenant" ],
        "summary" : "Available Operations",
        "description" : "",
        "operationId" : "getTenantAvailableOperations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo7497",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResourceOptionsDtoSwagger"
            }
          }
        }
      }
    },
    "/tenant/{id}/group-members" : {
      "options" : {
        "tags" : [ "Tenant" ],
        "summary" : "The OPTIONS request allows checking for the set of available operations that the currently authenticated user can perform on the resource. If the user can perform an operation or not may depend on various things, including the users authorizations to interact with this resource and the internal configuration of the process engine.",
        "description" : "",
        "operationId" : "getTenantGetTenantGroupMembersResourceAvailableOperations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the tenant",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo6285",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResourceOptionsDtoSwagger"
            }
          }
        }
      }
    },
    "/tenant/{id}/group-members/{groupId}" : {
      "put" : {
        "tags" : [ "Tenant" ],
        "summary" : "Creates a membership between a tenant and a group.",
        "description" : "",
        "operationId" : "getTenantGetTenantGroupMembersResourceCreateMembership",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the tenant.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "groupId",
          "in" : "path",
          "description" : "The id of the group.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "Tenant" ],
        "summary" : "Deletes a membership between a tenant and a group.",
        "description" : "",
        "operationId" : "getTenantGetTenantGroupMembersResourceDeleteMembership",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the tenant.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "groupId",
          "in" : "path",
          "description" : "The id of the group.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/tenant/{id}/user-members" : {
      "options" : {
        "tags" : [ "Tenant" ],
        "summary" : "The OPTIONS request allows checking for the set of available operations that the currently authenticated user can perform on the resource. If the user can perform an operation or not may depend on various things, including the users authorizations to interact with this resource and the internal configuration of the process engine.",
        "description" : "",
        "operationId" : "getTenantGetTenantUserMembersResourceAvailableOperations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the tenant",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo8742",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResourceOptionsDtoSwagger"
            }
          }
        }
      }
    },
    "/tenant/{id}/user-members/{userId}" : {
      "put" : {
        "tags" : [ "Tenant" ],
        "summary" : "Creates a membership between a tenant and an user.",
        "description" : "",
        "operationId" : "getTenantGetTenantUserMembersResourceCreateMembership",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the tenant.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "The id of the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "Tenant" ],
        "summary" : "Deletes a membership between a tenant and an user.",
        "description" : "",
        "operationId" : "getTenantGetTenantUserMembersResourceDeleteMembership",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the tenant.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "The id of the user.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/user" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Query for a list of users using a list of parameters.\nThe size of the result set can be retrieved by using the Get User Count",
        "description" : "",
        "operationId" : "queryUsersList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo5848",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "User" ],
        "summary" : "The `/user` resource supports two custom OPTIONS requests, one for the resource as such and one for individual user instances. The OPTIONS request allows checking for the set of available operations that the currently authenticated user can perform on the `/user` resource. If the user can perform an operation or not may depend on various things, including the user's authorizations to interact with this resource and the internal configuration of the process engine.",
        "description" : "",
        "operationId" : "availableOperations",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResourceOptionsDto"
            }
          }
        }
      }
    },
    "/user-operation" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Query User Operation Entries",
        "description" : "",
        "operationId" : "queryUserOperationEntriesList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo5311",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Parameter firstResult",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Parameter maxResults",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/user-operation/count" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Query User Operation Count",
        "description" : "",
        "operationId" : "queryUserOperationCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDto"
            }
          }
        }
      }
    },
    "/user/count" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Query for users using a list of parameters and retrieves the count.",
        "description" : "",
        "operationId" : "getUserCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      }
    },
    "/user/create" : {
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Create a new user.",
        "description" : "",
        "operationId" : "createUser",
        "consumes" : [ "*/*" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter userDto3878",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/user/{id}" : {
      "delete" : {
        "tags" : [ "User" ],
        "summary" : "Deletes a user by id.",
        "description" : "",
        "operationId" : "getUserDeleteUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the user to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "options" : {
        "tags" : [ "User" ],
        "summary" : "Available Operations",
        "description" : "",
        "operationId" : "getUserAvailableOperations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo6025",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResourceOptionsDtoSwagger"
            }
          }
        }
      }
    },
    "/user/{id}/credentials" : {
      "put" : {
        "tags" : [ "User" ],
        "summary" : "Updates a user's credentials (password).",
        "description" : "",
        "operationId" : "getUserUpdateCredentials",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Parameter id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter userCredentialsDto5780",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserCredentialsDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/user/{id}/profile" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Retrieves a user's profile.",
        "description" : "",
        "operationId" : "getUserGetUserProfile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the user to be retrieved.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo232",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserProfileDtoSwagger"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "User" ],
        "summary" : "Updates the profile information of an already existing user.",
        "description" : "",
        "operationId" : "getUserUpdateProfile",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the user.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter userProfileDto3270",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserProfileDto"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/variable-instance" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Query for variable instances that fulfill given parameters. Parameters may be the properties of variable instances, such as the name or type. The size of the result set can be retrieved by using the Get Variable Instance Count",
        "description" : "",
        "operationId" : "getHistoricVariableInstancesList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter uriInfo3359",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UriInfo"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "deserializeValues",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Historic" ],
        "summary" : "Query for variable instances that fulfill given parameters through a JSON object. This method is slightly more powerful than the\nGet Variable Instances`String`, `Number` or `Boolean`.",
        "description" : "",
        "operationId" : "queryHistoricVariableInstancesList",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter historicVariableInstanceQueryDto2573",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoricVariableInstanceQueryDto"
          }
        }, {
          "name" : "firstResult",
          "in" : "query",
          "description" : "Pagination of results. Specifies the index of the first result to return.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "maxResults",
          "in" : "query",
          "description" : "Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "deserializeValues",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/variable-instance/count" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Query for the number of variable instances that fulfill given parameters. Takes the same parameters as the Get Variable Instances",
        "description" : "",
        "operationId" : "getHistoricVariableInstancesCount",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Historic" ],
        "summary" : "Query for the number of variable instances that fulfill given parameters. This method takes the same message body as the\nGet Variable Instances (POST)Get Variable Instance Count",
        "description" : "",
        "operationId" : "queryHistoricVariableInstancesCount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Parameter historicVariableInstanceQueryDto9263",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HistoricVariableInstanceQueryDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CountResultDtoSwagger"
            }
          }
        }
      }
    },
    "/variable-instance/{id}" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Retrieves a variable by id.",
        "description" : "",
        "operationId" : "variableInstanceResourceGetResource",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the variable instance.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deserializeValue",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HistoricVariableInstanceDtoSwagger"
            }
          }
        }
      }
    },
    "/variable-instance/{id}/data" : {
      "get" : {
        "tags" : [ "Historic" ],
        "summary" : "Retrieves the content of a variable by id. Applicable for byte array and file variables.",
        "description" : "",
        "operationId" : "variableInstanceResourceGetResourceBinary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the variable instance.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    }
  },
  "definitions" : {
    "AbstractQueryDto" : {
      "type" : "object",
      "properties" : {
        "sorting" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SortingDto"
          }
        }
      }
    },
    "AbstractQueryDtoObject" : {
      "type" : "object",
      "properties" : {
        "sorting" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SortingDto"
          }
        }
      }
    },
    "ActivityInstanceDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "parentActivityInstanceId" : {
          "type" : "string"
        },
        "activityId" : {
          "type" : "string"
        },
        "activityType" : {
          "type" : "string"
        },
        "processInstanceId" : {
          "type" : "string"
        },
        "processDefinitionId" : {
          "type" : "string"
        },
        "childActivityInstances" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ActivityInstanceDto"
          }
        },
        "childTransitionInstances" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TransitionInstanceDto"
          }
        },
        "executionIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "activityName" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "ActivityInstanceDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "parentActivityInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "activityId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "activityType" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "childActivityInstances" : {
          "type" : "array",
          "example" : "some example",
          "description" : "description of the property",
          "items" : {
            "$ref" : "#/definitions/ActivityInstanceDto"
          }
        },
        "childTransitionInstances" : {
          "type" : "array",
          "example" : "some example",
          "description" : "description of the property",
          "items" : {
            "$ref" : "#/definitions/TransitionInstanceDto"
          }
        },
        "executionIds" : {
          "type" : "array",
          "example" : "some example",
          "description" : "description of the property",
          "items" : {
            "type" : "string"
          }
        },
        "activityName" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "name" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "AtomLink" : {
      "type" : "object",
      "properties" : {
        "method" : {
          "type" : "string"
        },
        "href" : {
          "type" : "string"
        },
        "rel" : {
          "type" : "string"
        }
      }
    },
    "AttachmentDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AtomLink"
          }
        },
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "name" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "description" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "taskId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "type" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "url" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "AuthenticationResult" : {
      "type" : "object",
      "properties" : {
        "authenticatedUser" : {
          "type" : "string"
        },
        "authenticated" : {
          "type" : "boolean"
        }
      }
    },
    "AuthorizationCheckResultDto" : {
      "type" : "object",
      "properties" : {
        "permissionName" : {
          "type" : "string"
        },
        "resourceName" : {
          "type" : "string"
        },
        "resourceId" : {
          "type" : "string"
        },
        "authorized" : {
          "type" : "boolean"
        }
      }
    },
    "AuthorizationCheckResultDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "permissionName" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "resourceName" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "resourceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "authorized" : {
          "type" : "boolean"
        }
      }
    },
    "AuthorizationCreateDto" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "integer",
          "format" : "int32"
        },
        "permissions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "userId" : {
          "type" : "string"
        },
        "groupId" : {
          "type" : "string"
        },
        "resourceType" : {
          "type" : "integer",
          "format" : "int32"
        },
        "resourceId" : {
          "type" : "string"
        }
      }
    },
    "AuthorizationDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "integer",
          "format" : "int32"
        },
        "permissions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "userId" : {
          "type" : "string"
        },
        "groupId" : {
          "type" : "string"
        },
        "resourceType" : {
          "type" : "integer",
          "format" : "int32"
        },
        "resourceId" : {
          "type" : "string"
        }
      }
    },
    "AuthorizationDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "some example",
          "description" : "description of the property"
        },
        "permissions" : {
          "type" : "array",
          "example" : "some example",
          "description" : "description of the property",
          "items" : {
            "type" : "string"
          }
        },
        "userId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "groupId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "resourceType" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "some example",
          "description" : "description of the property"
        },
        "resourceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "BasicUserCredentialsDto" : {
      "type" : "object",
      "properties" : {
        "password" : {
          "type" : "string"
        },
        "authenticatedUserPassword" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        }
      }
    },
    "BatchDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "totalJobs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "jobsCreated" : {
          "type" : "integer",
          "format" : "int32"
        },
        "batchJobsPerSeed" : {
          "type" : "integer",
          "format" : "int32"
        },
        "invocationsPerBatchJob" : {
          "type" : "integer",
          "format" : "int32"
        },
        "seedJobDefinitionId" : {
          "type" : "string"
        },
        "monitorJobDefinitionId" : {
          "type" : "string"
        },
        "batchJobDefinitionId" : {
          "type" : "string"
        },
        "suspended" : {
          "type" : "boolean"
        },
        "tenantId" : {
          "type" : "string"
        }
      }
    },
    "BatchDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "type" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "totalJobs" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "some example",
          "description" : "description of the property"
        },
        "jobsCreated" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "some example",
          "description" : "description of the property"
        },
        "batchJobsPerSeed" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "some example",
          "description" : "description of the property"
        },
        "invocationsPerBatchJob" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "some example",
          "description" : "description of the property"
        },
        "seedJobDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "monitorJobDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "batchJobDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "suspended" : {
          "type" : "boolean"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "CancellationInstructionDto" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ProcessInstanceModificationInstructionDto"
      }, {
        "type" : "object"
      } ]
    },
    "CaseDefinitionDiagramDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "cmmnXml" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "CaseDefinitionDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "key" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int32"
        },
        "resource" : {
          "type" : "string"
        },
        "deploymentId" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        },
        "historyTimeToLive" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "CaseDefinitionDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "key" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "category" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "name" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "version" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "some example",
          "description" : "description of the property"
        },
        "resource" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "deploymentId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "historyTimeToLive" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "CaseExecutionDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "caseInstanceId" : {
          "type" : "string"
        },
        "caseDefinitionId" : {
          "type" : "string"
        },
        "activityId" : {
          "type" : "string"
        },
        "activityName" : {
          "type" : "string"
        },
        "activityType" : {
          "type" : "string"
        },
        "activityDescription" : {
          "type" : "string"
        },
        "parentId" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        },
        "required" : {
          "type" : "boolean"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "active" : {
          "type" : "boolean"
        },
        "disabled" : {
          "type" : "boolean"
        }
      }
    },
    "CaseExecutionDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "activityId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "activityName" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "activityType" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "activityDescription" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "parentId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "required" : {
          "type" : "boolean"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "active" : {
          "type" : "boolean"
        },
        "disabled" : {
          "type" : "boolean"
        }
      }
    },
    "CaseExecutionQueryDto" : {
      "type" : "object",
      "properties" : {
        "sorting" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SortingDto"
          }
        }
      }
    },
    "CaseExecutionTriggerDto" : {
      "type" : "object",
      "properties" : {
        "variables" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/TriggerVariableValueDto"
          }
        },
        "deletions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VariableNameDto"
          }
        }
      }
    },
    "CaseInstanceDto" : {
      "type" : "object",
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AtomLink"
          }
        },
        "id" : {
          "type" : "string"
        },
        "caseDefinitionId" : {
          "type" : "string"
        },
        "businessKey" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        },
        "active" : {
          "type" : "boolean"
        },
        "completed" : {
          "type" : "boolean"
        },
        "terminated" : {
          "type" : "boolean"
        }
      }
    },
    "CaseInstanceDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AtomLink"
          }
        },
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "businessKey" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "active" : {
          "type" : "boolean"
        },
        "completed" : {
          "type" : "boolean"
        },
        "terminated" : {
          "type" : "boolean"
        }
      }
    },
    "CaseInstanceQueryDto" : {
      "type" : "object",
      "properties" : {
        "sorting" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SortingDto"
          }
        }
      }
    },
    "CommentDto" : {
      "type" : "object",
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AtomLink"
          }
        },
        "id" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "string"
        },
        "time" : {
          "type" : "string",
          "format" : "date-time"
        },
        "taskId" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "CommentDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AtomLink"
          }
        },
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "userId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "time" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "some example",
          "description" : "description of the property"
        },
        "taskId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "message" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "CompleteExternalTaskDto" : {
      "type" : "object",
      "properties" : {
        "workerId" : {
          "type" : "string"
        },
        "variables" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/VariableValueDto"
          }
        }
      }
    },
    "CompleteTaskDto" : {
      "type" : "object",
      "properties" : {
        "variables" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/VariableValueDto"
          }
        }
      }
    },
    "CorrelationMessageDto" : {
      "type" : "object",
      "properties" : {
        "messageName" : {
          "type" : "string"
        },
        "businessKey" : {
          "type" : "string"
        },
        "correlationKeys" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/VariableValueDto"
          }
        },
        "localCorrelationKeys" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/VariableValueDto"
          }
        },
        "processVariables" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/VariableValueDto"
          }
        },
        "tenantId" : {
          "type" : "string"
        },
        "withoutTenantId" : {
          "type" : "boolean"
        },
        "processInstanceId" : {
          "type" : "string"
        },
        "all" : {
          "type" : "boolean"
        },
        "resultEnabled" : {
          "type" : "boolean"
        }
      }
    },
    "CountResultDto" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "CountResultDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "CreateCaseInstanceDto" : {
      "type" : "object",
      "properties" : {
        "variables" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/VariableValueDto"
          }
        },
        "businessKey" : {
          "type" : "string"
        }
      }
    },
    "DecisionDefinitionDiagramDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "dmnXml" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "DecisionDefinitionDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "key" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int32"
        },
        "resource" : {
          "type" : "string"
        },
        "deploymentId" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        },
        "decisionRequirementsDefinitionId" : {
          "type" : "string"
        },
        "decisionRequirementsDefinitionKey" : {
          "type" : "string"
        },
        "historyTimeToLive" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DecisionDefinitionDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "key" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "category" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "name" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "version" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "some example",
          "description" : "description of the property"
        },
        "resource" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "deploymentId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "decisionRequirementsDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "decisionRequirementsDefinitionKey" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "historyTimeToLive" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "DecisionRequirementsDefinitionDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "key" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int32"
        },
        "resource" : {
          "type" : "string"
        },
        "deploymentId" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        }
      }
    },
    "DecisionRequirementsDefinitionDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "key" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "category" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "name" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "version" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "some example",
          "description" : "description of the property"
        },
        "resource" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "deploymentId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "DecisionRequirementsDefinitionXmlDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "dmnXml" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "DeleteHistoricProcessInstancesDto" : {
      "type" : "object",
      "properties" : {
        "historicProcessInstanceIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "historicProcessInstanceQuery" : {
          "$ref" : "#/definitions/HistoricProcessInstanceQueryDto"
        },
        "deleteReason" : {
          "type" : "string"
        }
      }
    },
    "DeleteProcessInstancesDto" : {
      "type" : "object",
      "properties" : {
        "processInstanceIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "processInstanceQuery" : {
          "$ref" : "#/definitions/ProcessInstanceQueryDto"
        },
        "deleteReason" : {
          "type" : "string"
        },
        "skipCustomListeners" : {
          "type" : "boolean"
        },
        "historicProcessInstanceQuery" : {
          "$ref" : "#/definitions/HistoricProcessInstanceQueryDto"
        }
      }
    },
    "DeploymentDto" : {
      "type" : "object",
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AtomLink"
          }
        },
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "source" : {
          "type" : "string"
        },
        "deploymentTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "tenantId" : {
          "type" : "string"
        }
      }
    },
    "DeploymentDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AtomLink"
          }
        },
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "name" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "source" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "deploymentTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "some example",
          "description" : "description of the property"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "DeploymentResourceDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "name" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "deploymentId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "DeploymentWithDefinitionsDto" : {
      "type" : "object",
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AtomLink"
          }
        },
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "source" : {
          "type" : "string"
        },
        "deploymentTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "tenantId" : {
          "type" : "string"
        },
        "deployedProcessDefinitions" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/ProcessDefinitionDto"
          }
        },
        "deployedCaseDefinitions" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/CaseDefinitionDto"
          }
        },
        "deployedDecisionDefinitions" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/DecisionDefinitionDto"
          }
        },
        "deployedDecisionRequirementsDefinitions" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/DecisionRequirementsDefinitionDto"
          }
        }
      }
    },
    "DeploymentWithDefinitionsDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AtomLink"
          }
        },
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "source" : {
          "type" : "string"
        },
        "deploymentTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "tenantId" : {
          "type" : "string"
        },
        "deployedProcessDefinitions" : {
          "type" : "object",
          "example" : "some example",
          "description" : "description of the property",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "deployedCaseDefinitions" : {
          "type" : "object",
          "example" : "some example",
          "description" : "description of the property",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "deployedDecisionDefinitions" : {
          "type" : "object",
          "example" : "some example",
          "description" : "description of the property",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "deployedDecisionRequirementsDefinitions" : {
          "type" : "object",
          "example" : "some example",
          "description" : "description of the property",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "EvaluateDecisionDto" : {
      "type" : "object",
      "properties" : {
        "variables" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/VariableValueDto"
          }
        }
      }
    },
    "EventSubscriptionDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "eventType" : {
          "type" : "string"
        },
        "eventName" : {
          "type" : "string"
        },
        "executionId" : {
          "type" : "string"
        },
        "processInstanceId" : {
          "type" : "string"
        },
        "activityId" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "tenantId" : {
          "type" : "string"
        }
      }
    },
    "EventSubscriptionDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "eventType" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "eventName" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "executionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "activityId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "some example",
          "description" : "description of the property"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "ExecutionDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "processInstanceId" : {
          "type" : "string"
        },
        "ended" : {
          "type" : "boolean"
        },
        "tenantId" : {
          "type" : "string"
        }
      }
    },
    "ExecutionDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "ended" : {
          "type" : "boolean"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "ExecutionQueryDto" : {
      "type" : "object",
      "properties" : {
        "sorting" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SortingDto"
          }
        }
      }
    },
    "ExecutionTriggerDto" : {
      "type" : "object",
      "properties" : {
        "variables" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/VariableValueDto"
          }
        }
      }
    },
    "ExternalTaskBpmnError" : {
      "type" : "object",
      "properties" : {
        "workerId" : {
          "type" : "string"
        },
        "errorCode" : {
          "type" : "string"
        }
      }
    },
    "ExternalTaskDto" : {
      "type" : "object",
      "properties" : {
        "activityId" : {
          "type" : "string"
        },
        "activityInstanceId" : {
          "type" : "string"
        },
        "errorMessage" : {
          "type" : "string"
        },
        "errorDetails" : {
          "type" : "string"
        },
        "executionId" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "lockExpirationTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "processDefinitionId" : {
          "type" : "string"
        },
        "processDefinitionKey" : {
          "type" : "string"
        },
        "processInstanceId" : {
          "type" : "string"
        },
        "retries" : {
          "type" : "integer",
          "format" : "int32"
        },
        "suspended" : {
          "type" : "boolean"
        },
        "workerId" : {
          "type" : "string"
        },
        "topicName" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "ExternalTaskDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "activityId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "activityInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "errorMessage" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "errorDetails" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "executionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "lockExpirationTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionKey" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "retries" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "some example",
          "description" : "description of the property"
        },
        "suspended" : {
          "type" : "boolean"
        },
        "workerId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "topicName" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "ExternalTaskFailureDto" : {
      "type" : "object",
      "properties" : {
        "workerId" : {
          "type" : "string"
        },
        "errorMessage" : {
          "type" : "string"
        },
        "errorDetails" : {
          "type" : "string"
        },
        "retryTimeout" : {
          "type" : "integer",
          "format" : "int64"
        },
        "retries" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ExternalTaskQueryDto" : {
      "type" : "object",
      "properties" : {
        "sorting" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SortingDto"
          }
        }
      }
    },
    "FetchExternalTaskTopicDto" : {
      "type" : "object",
      "properties" : {
        "topicName" : {
          "type" : "string"
        },
        "lockDuration" : {
          "type" : "integer",
          "format" : "int64"
        },
        "variables" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "deserializeValues" : {
          "type" : "boolean"
        }
      }
    },
    "FetchExternalTasksDto" : {
      "type" : "object",
      "properties" : {
        "maxTasks" : {
          "type" : "integer",
          "format" : "int32"
        },
        "workerId" : {
          "type" : "string"
        },
        "usePriority" : {
          "type" : "boolean"
        },
        "topics" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FetchExternalTaskTopicDto"
          }
        }
      }
    },
    "FilterDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "resourceType" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "owner" : {
          "type" : "string"
        },
        "query" : {
          "$ref" : "#/definitions/AbstractQueryDtoObject"
        },
        "properties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "itemCount" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "FilterDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "resourceType" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "name" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "owner" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "query" : {
          "example" : "some example",
          "description" : "description of the property",
          "$ref" : "#/definitions/AbstractQueryDto"
        },
        "properties" : {
          "type" : "object",
          "example" : "some example",
          "description" : "description of the property",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "itemCount" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "FormDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "contextPath" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "GroupDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "GroupDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "name" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "type" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "GroupInfoDto" : {
      "type" : "object",
      "properties" : {
        "groups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GroupDto"
          }
        },
        "groupUsers" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/UserDto"
          }
        }
      }
    },
    "GroupInfoDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "groups" : {
          "type" : "array",
          "example" : "some example",
          "description" : "description of the property",
          "items" : {
            "type" : "object"
          }
        },
        "groupUsers" : {
          "type" : "array",
          "example" : "some example",
          "description" : "description of the property",
          "uniqueItems" : true,
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "GroupMembersResource" : {
      "type" : "object"
    },
    "HistoricActivityInstanceDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "parentActivityInstanceId" : {
          "type" : "string"
        },
        "activityId" : {
          "type" : "string"
        },
        "activityName" : {
          "type" : "string"
        },
        "activityType" : {
          "type" : "string"
        },
        "processDefinitionKey" : {
          "type" : "string"
        },
        "processDefinitionId" : {
          "type" : "string"
        },
        "processInstanceId" : {
          "type" : "string"
        },
        "executionId" : {
          "type" : "string"
        },
        "taskId" : {
          "type" : "string"
        },
        "calledProcessInstanceId" : {
          "type" : "string"
        },
        "calledCaseInstanceId" : {
          "type" : "string"
        },
        "assignee" : {
          "type" : "string"
        },
        "startTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "durationInMillis" : {
          "type" : "integer",
          "format" : "int64"
        },
        "canceled" : {
          "type" : "boolean"
        },
        "completeScope" : {
          "type" : "boolean"
        },
        "tenantId" : {
          "type" : "string"
        }
      }
    },
    "HistoricActivityInstanceDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "parentActivityInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "activityId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "activityName" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "activityType" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionKey" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "executionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "taskId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "calledProcessInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "calledCaseInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "assignee" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "startTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "some example",
          "description" : "description of the property"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "some example",
          "description" : "description of the property"
        },
        "durationInMillis" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "some example",
          "description" : "description of the property"
        },
        "canceled" : {
          "type" : "boolean",
          "example" : false,
          "description" : "description of the property"
        },
        "completeScope" : {
          "type" : "boolean",
          "example" : false,
          "description" : "description of the property"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "HistoricActivityInstanceQueryDto" : {
      "type" : "object",
      "properties" : {
        "sorting" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SortingDto"
          }
        }
      }
    },
    "HistoricActivityInstanceRestService" : {
      "type" : "object"
    },
    "HistoricActivityStatisticsRestService" : {
      "type" : "object"
    },
    "HistoricBatchDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "totalJobs" : {
          "type" : "integer",
          "format" : "int32"
        },
        "batchJobsPerSeed" : {
          "type" : "integer",
          "format" : "int32"
        },
        "invocationsPerBatchJob" : {
          "type" : "integer",
          "format" : "int32"
        },
        "seedJobDefinitionId" : {
          "type" : "string"
        },
        "monitorJobDefinitionId" : {
          "type" : "string"
        },
        "batchJobDefinitionId" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        },
        "startTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "HistoricBatchDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "type" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "totalJobs" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "some example",
          "description" : "description of the property"
        },
        "batchJobsPerSeed" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "some example",
          "description" : "description of the property"
        },
        "invocationsPerBatchJob" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "some example",
          "description" : "description of the property"
        },
        "seedJobDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "monitorJobDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "batchJobDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "startTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "some example",
          "description" : "description of the property"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "HistoricBatchRestService" : {
      "type" : "object"
    },
    "HistoricCaseActivityInstanceDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "parentCaseActivityInstanceId" : {
          "type" : "string"
        },
        "caseActivityId" : {
          "type" : "string"
        },
        "caseActivityName" : {
          "type" : "string"
        },
        "caseActivityType" : {
          "type" : "string"
        },
        "caseDefinitionId" : {
          "type" : "string"
        },
        "caseInstanceId" : {
          "type" : "string"
        },
        "caseExecutionId" : {
          "type" : "string"
        },
        "taskId" : {
          "type" : "string"
        },
        "calledProcessInstanceId" : {
          "type" : "string"
        },
        "calledCaseInstanceId" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        },
        "createTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "durationInMillis" : {
          "type" : "integer",
          "format" : "int64"
        },
        "required" : {
          "type" : "boolean"
        },
        "available" : {
          "type" : "boolean"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "disabled" : {
          "type" : "boolean"
        },
        "active" : {
          "type" : "boolean"
        },
        "completed" : {
          "type" : "boolean"
        },
        "terminated" : {
          "type" : "boolean"
        }
      }
    },
    "HistoricCaseActivityInstanceDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "parentCaseActivityInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseActivityId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseActivityName" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseActivityType" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseExecutionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "taskId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "calledProcessInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "calledCaseInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "createTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "some example",
          "description" : "description of the property"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "some example",
          "description" : "description of the property"
        },
        "durationInMillis" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "some example",
          "description" : "description of the property"
        },
        "required" : {
          "type" : "boolean",
          "example" : false,
          "description" : "description of the property"
        },
        "available" : {
          "type" : "boolean",
          "example" : false,
          "description" : "description of the property"
        },
        "enabled" : {
          "type" : "boolean",
          "example" : false,
          "description" : "description of the property"
        },
        "disabled" : {
          "type" : "boolean",
          "example" : false,
          "description" : "description of the property"
        },
        "active" : {
          "type" : "boolean",
          "example" : false,
          "description" : "description of the property"
        },
        "completed" : {
          "type" : "boolean",
          "example" : false,
          "description" : "description of the property"
        },
        "terminated" : {
          "type" : "boolean",
          "example" : false,
          "description" : "description of the property"
        }
      }
    },
    "HistoricCaseActivityInstanceRestService" : {
      "type" : "object"
    },
    "HistoricCaseActivityStatisticsRestService" : {
      "type" : "object"
    },
    "HistoricCaseInstanceDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "businessKey" : {
          "type" : "string"
        },
        "caseDefinitionId" : {
          "type" : "string"
        },
        "caseDefinitionKey" : {
          "type" : "string"
        },
        "caseDefinitionName" : {
          "type" : "string"
        },
        "createTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "closeTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "durationInMillis" : {
          "type" : "integer",
          "format" : "int64"
        },
        "createUserId" : {
          "type" : "string"
        },
        "superCaseInstanceId" : {
          "type" : "string"
        },
        "superProcessInstanceId" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        },
        "active" : {
          "type" : "boolean"
        },
        "completed" : {
          "type" : "boolean"
        },
        "terminated" : {
          "type" : "boolean"
        },
        "closed" : {
          "type" : "boolean"
        }
      }
    },
    "HistoricCaseInstanceDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "businessKey" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseDefinitionKey" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseDefinitionName" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "createTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "some example",
          "description" : "description of the property"
        },
        "closeTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "some example",
          "description" : "description of the property"
        },
        "durationInMillis" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "some example",
          "description" : "description of the property"
        },
        "createUserId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "superCaseInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "superProcessInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "active" : {
          "type" : "boolean",
          "example" : false,
          "description" : "description of the property"
        },
        "completed" : {
          "type" : "boolean",
          "example" : false,
          "description" : "description of the property"
        },
        "terminated" : {
          "type" : "boolean",
          "example" : false,
          "description" : "description of the property"
        },
        "closed" : {
          "type" : "boolean",
          "example" : false,
          "description" : "description of the property"
        }
      }
    },
    "HistoricCaseInstanceQueryDto" : {
      "type" : "object",
      "properties" : {
        "caseInstanceId" : {
          "type" : "string"
        },
        "caseInstanceIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "caseDefinitionId" : {
          "type" : "string"
        },
        "caseDefinitionKey" : {
          "type" : "string"
        },
        "caseDefinitionName" : {
          "type" : "string"
        },
        "caseDefinitionNameLike" : {
          "type" : "string"
        },
        "caseDefinitionKeyNotIn" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "caseInstanceBusinessKey" : {
          "type" : "string"
        },
        "caseInstanceBusinessKeyLike" : {
          "type" : "string"
        },
        "superCaseInstanceId" : {
          "type" : "string"
        },
        "subCaseInstanceId" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "caseActivityIdIn" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "createdBefore" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createdAfter" : {
          "type" : "string",
          "format" : "date-time"
        },
        "closedBefore" : {
          "type" : "string",
          "format" : "date-time"
        },
        "closedAfter" : {
          "type" : "string",
          "format" : "date-time"
        },
        "active" : {
          "type" : "boolean"
        },
        "completed" : {
          "type" : "boolean"
        },
        "terminated" : {
          "type" : "boolean"
        },
        "closed" : {
          "type" : "boolean"
        },
        "notClosed" : {
          "type" : "boolean"
        },
        "sorting" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SortingDto"
          }
        }
      }
    },
    "HistoricCaseInstanceRestService" : {
      "type" : "object"
    },
    "HistoricDecisionInputInstanceDto" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "object"
        },
        "valueInfo" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "id" : {
          "type" : "string"
        },
        "decisionInstanceId" : {
          "type" : "string"
        },
        "clauseId" : {
          "type" : "string"
        },
        "clauseName" : {
          "type" : "string"
        },
        "errorMessage" : {
          "type" : "string"
        }
      }
    },
    "HistoricDecisionInstanceDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "decisionDefinitionId" : {
          "type" : "string"
        },
        "decisionDefinitionKey" : {
          "type" : "string"
        },
        "decisionDefinitionName" : {
          "type" : "string"
        },
        "evaluationTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "processDefinitionId" : {
          "type" : "string"
        },
        "processDefinitionKey" : {
          "type" : "string"
        },
        "processInstanceId" : {
          "type" : "string"
        },
        "caseDefinitionId" : {
          "type" : "string"
        },
        "caseDefinitionKey" : {
          "type" : "string"
        },
        "caseInstanceId" : {
          "type" : "string"
        },
        "activityId" : {
          "type" : "string"
        },
        "activityInstanceId" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "string"
        },
        "inputs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HistoricDecisionInputInstanceDto"
          }
        },
        "outputs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/HistoricDecisionOutputInstanceDto"
          }
        },
        "collectResultValue" : {
          "type" : "number",
          "format" : "double"
        },
        "rootDecisionInstanceId" : {
          "type" : "string"
        },
        "decisionRequirementsDefinitionId" : {
          "type" : "string"
        },
        "decisionRequirementsDefinitionKey" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        }
      }
    },
    "HistoricDecisionInstanceDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "decisionDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "decisionDefinitionKey" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "decisionDefinitionName" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "evaluationTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionKey" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseDefinitionKey" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "activityId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "activityInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "userId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "inputs" : {
          "type" : "array",
          "example" : "some example",
          "description" : "description of the property",
          "items" : {
            "type" : "object"
          }
        },
        "outputs" : {
          "type" : "array",
          "example" : "some example",
          "description" : "description of the property",
          "items" : {
            "type" : "object"
          }
        },
        "collectResultValue" : {
          "type" : "number",
          "format" : "double",
          "example" : "some example",
          "description" : "description of the property"
        },
        "rootDecisionInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "decisionRequirementsDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "decisionRequirementsDefinitionKey" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "HistoricDecisionInstanceRestService" : {
      "type" : "object"
    },
    "HistoricDecisionOutputInstanceDto" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "object"
        },
        "valueInfo" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "id" : {
          "type" : "string"
        },
        "decisionInstanceId" : {
          "type" : "string"
        },
        "clauseId" : {
          "type" : "string"
        },
        "clauseName" : {
          "type" : "string"
        },
        "ruleId" : {
          "type" : "string"
        },
        "ruleOrder" : {
          "type" : "integer",
          "format" : "int32"
        },
        "variableName" : {
          "type" : "string"
        },
        "errorMessage" : {
          "type" : "string"
        }
      }
    },
    "HistoricDecisionStatisticsRestService" : {
      "type" : "object"
    },
    "HistoricDetailDto" : {
      "type" : "object",
      "discriminator" : "type",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "processDefinitionKey" : {
          "type" : "string"
        },
        "processDefinitionId" : {
          "type" : "string"
        },
        "processInstanceId" : {
          "type" : "string"
        },
        "activityInstanceId" : {
          "type" : "string"
        },
        "executionId" : {
          "type" : "string"
        },
        "caseDefinitionKey" : {
          "type" : "string"
        },
        "caseDefinitionId" : {
          "type" : "string"
        },
        "caseInstanceId" : {
          "type" : "string"
        },
        "caseExecutionId" : {
          "type" : "string"
        },
        "taskId" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        },
        "userOperationId" : {
          "type" : "string"
        },
        "time" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "HistoricDetailDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionKey" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "activityInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "executionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseDefinitionKey" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseExecutionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "taskId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "userOperationId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "time" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "HistoricDetailRestService" : {
      "type" : "object"
    },
    "HistoricExternalTaskLogDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "externalTaskId" : {
          "type" : "string"
        },
        "topicName" : {
          "type" : "string"
        },
        "workerId" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int64"
        },
        "retries" : {
          "type" : "integer",
          "format" : "int32"
        },
        "errorMessage" : {
          "type" : "string"
        },
        "activityId" : {
          "type" : "string"
        },
        "activityInstanceId" : {
          "type" : "string"
        },
        "executionId" : {
          "type" : "string"
        },
        "processInstanceId" : {
          "type" : "string"
        },
        "processDefinitionId" : {
          "type" : "string"
        },
        "processDefinitionKey" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        },
        "creationLog" : {
          "type" : "boolean"
        },
        "failureLog" : {
          "type" : "boolean"
        },
        "successLog" : {
          "type" : "boolean"
        },
        "deletionLog" : {
          "type" : "boolean"
        }
      }
    },
    "HistoricExternalTaskLogDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "timestamp" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "some example",
          "description" : "description of the property"
        },
        "externalTaskId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "topicName" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "workerId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "some example",
          "description" : "description of the property"
        },
        "retries" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "some example",
          "description" : "description of the property"
        },
        "errorMessage" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "activityId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "activityInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "executionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionKey" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "creationLog" : {
          "type" : "boolean"
        },
        "failureLog" : {
          "type" : "boolean"
        },
        "successLog" : {
          "type" : "boolean"
        },
        "deletionLog" : {
          "type" : "boolean"
        }
      }
    },
    "HistoricExternalTaskLogQueryDto" : {
      "type" : "object",
      "properties" : {
        "sorting" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SortingDto"
          }
        }
      }
    },
    "HistoricExternalTaskLogRestService" : {
      "type" : "object"
    },
    "HistoricFormFieldDto" : {
      "allOf" : [ {
        "$ref" : "#/definitions/HistoricDetailDto"
      }, {
        "type" : "object",
        "properties" : {
          "fieldId" : {
            "type" : "string"
          },
          "fieldValue" : {
            "type" : "object"
          }
        }
      } ]
    },
    "HistoricIdentityLinkLogRestService" : {
      "type" : "object"
    },
    "HistoricIncidentRestService" : {
      "type" : "object"
    },
    "HistoricJobLogDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "jobId" : {
          "type" : "string"
        },
        "jobDueDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "jobRetries" : {
          "type" : "integer",
          "format" : "int32"
        },
        "jobPriority" : {
          "type" : "integer",
          "format" : "int64"
        },
        "jobExceptionMessage" : {
          "type" : "string"
        },
        "jobDefinitionId" : {
          "type" : "string"
        },
        "jobDefinitionType" : {
          "type" : "string"
        },
        "jobDefinitionConfiguration" : {
          "type" : "string"
        },
        "activityId" : {
          "type" : "string"
        },
        "executionId" : {
          "type" : "string"
        },
        "processInstanceId" : {
          "type" : "string"
        },
        "processDefinitionId" : {
          "type" : "string"
        },
        "processDefinitionKey" : {
          "type" : "string"
        },
        "deploymentId" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        },
        "creationLog" : {
          "type" : "boolean"
        },
        "failureLog" : {
          "type" : "boolean"
        },
        "successLog" : {
          "type" : "boolean"
        },
        "deletionLog" : {
          "type" : "boolean"
        }
      }
    },
    "HistoricJobLogDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "timestamp" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "some example",
          "description" : "description of the property"
        },
        "jobId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "jobDueDate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "some example",
          "description" : "description of the property"
        },
        "jobRetries" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "some example",
          "description" : "description of the property"
        },
        "jobPriority" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "some example",
          "description" : "description of the property"
        },
        "jobExceptionMessage" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "jobDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "jobDefinitionType" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "jobDefinitionConfiguration" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "activityId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "executionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionKey" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "deploymentId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "creationLog" : {
          "type" : "boolean"
        },
        "failureLog" : {
          "type" : "boolean"
        },
        "successLog" : {
          "type" : "boolean"
        },
        "deletionLog" : {
          "type" : "boolean"
        }
      }
    },
    "HistoricJobLogQueryDto" : {
      "type" : "object",
      "properties" : {
        "sorting" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SortingDto"
          }
        }
      }
    },
    "HistoricJobLogRestService" : {
      "type" : "object"
    },
    "HistoricProcessInstanceDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "businessKey" : {
          "type" : "string"
        },
        "processDefinitionId" : {
          "type" : "string"
        },
        "processDefinitionKey" : {
          "type" : "string"
        },
        "processDefinitionName" : {
          "type" : "string"
        },
        "processDefinitionVersion" : {
          "type" : "integer",
          "format" : "int32"
        },
        "startTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "durationInMillis" : {
          "type" : "integer",
          "format" : "int64"
        },
        "startUserId" : {
          "type" : "string"
        },
        "startActivityId" : {
          "type" : "string"
        },
        "deleteReason" : {
          "type" : "string"
        },
        "superProcessInstanceId" : {
          "type" : "string"
        },
        "superCaseInstanceId" : {
          "type" : "string"
        },
        "caseInstanceId" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        }
      }
    },
    "HistoricProcessInstanceDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "businessKey" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionKey" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionName" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionVersion" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "some example",
          "description" : "description of the property"
        },
        "startTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "some example",
          "description" : "description of the property"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "some example",
          "description" : "description of the property"
        },
        "durationInMillis" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "some example",
          "description" : "description of the property"
        },
        "startUserId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "startActivityId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "deleteReason" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "superProcessInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "superCaseInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "state" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "HistoricProcessInstanceQueryDto" : {
      "type" : "object",
      "properties" : {
        "sorting" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SortingDto"
          }
        }
      }
    },
    "HistoricProcessInstanceRestService" : {
      "type" : "object"
    },
    "HistoricTaskInstanceQueryDto" : {
      "type" : "object",
      "properties" : {
        "sorting" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SortingDto"
          }
        }
      }
    },
    "HistoricTaskInstanceRestService" : {
      "type" : "object"
    },
    "HistoricVariableInstanceDto" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "object"
        },
        "valueInfo" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "processDefinitionKey" : {
          "type" : "string"
        },
        "processDefinitionId" : {
          "type" : "string"
        },
        "processInstanceId" : {
          "type" : "string"
        },
        "executionId" : {
          "type" : "string"
        },
        "activityInstanceId" : {
          "type" : "string"
        },
        "caseDefinitionKey" : {
          "type" : "string"
        },
        "caseDefinitionId" : {
          "type" : "string"
        },
        "caseInstanceId" : {
          "type" : "string"
        },
        "caseExecutionId" : {
          "type" : "string"
        },
        "taskId" : {
          "type" : "string"
        },
        "errorMessage" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        }
      }
    },
    "HistoricVariableInstanceDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "object"
        },
        "valueInfo" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "name" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionKey" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "executionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "activityInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseDefinitionKey" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseExecutionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "taskId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "errorMessage" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "HistoricVariableInstanceQueryDto" : {
      "type" : "object",
      "properties" : {
        "sorting" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SortingDto"
          }
        }
      }
    },
    "HistoricVariableInstanceRestService" : {
      "type" : "object"
    },
    "HistoricVariableUpdateDto" : {
      "allOf" : [ {
        "$ref" : "#/definitions/HistoricDetailDto"
      }, {
        "type" : "object",
        "properties" : {
          "variableName" : {
            "type" : "string"
          },
          "variableInstanceId" : {
            "type" : "string"
          },
          "variableType" : {
            "type" : "string"
          },
          "value" : {
            "type" : "object"
          },
          "valueInfo" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "revision" : {
            "type" : "integer",
            "format" : "int32"
          },
          "errorMessage" : {
            "type" : "string"
          }
        }
      } ]
    },
    "HistoryTimeToLiveDto" : {
      "type" : "object",
      "properties" : {
        "historyTimeToLive" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "IdentityLinkDto" : {
      "type" : "object",
      "properties" : {
        "userId" : {
          "type" : "string"
        },
        "groupId" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "InputStream" : {
      "type" : "object"
    },
    "JobDefinitionDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "processDefinitionId" : {
          "type" : "string"
        },
        "processDefinitionKey" : {
          "type" : "string"
        },
        "jobType" : {
          "type" : "string"
        },
        "jobConfiguration" : {
          "type" : "string"
        },
        "activityId" : {
          "type" : "string"
        },
        "suspended" : {
          "type" : "boolean"
        },
        "overridingJobPriority" : {
          "type" : "integer",
          "format" : "int64"
        },
        "tenantId" : {
          "type" : "string"
        }
      }
    },
    "JobDefinitionDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionKey" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "jobType" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "jobConfiguration" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "activityId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "suspended" : {
          "type" : "boolean"
        },
        "overridingJobPriority" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "some example",
          "description" : "description of the property"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "JobDefinitionPriorityDto" : {
      "type" : "object",
      "properties" : {
        "priority" : {
          "type" : "integer",
          "format" : "int64"
        },
        "includeJobs" : {
          "type" : "boolean"
        }
      }
    },
    "JobDefinitionQueryDto" : {
      "type" : "object",
      "properties" : {
        "sorting" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SortingDto"
          }
        }
      }
    },
    "JobDefinitionSuspensionStateDto" : {
      "type" : "object",
      "properties" : {
        "suspended" : {
          "type" : "boolean"
        },
        "jobDefinitionId" : {
          "type" : "string"
        }
      }
    },
    "JobDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "jobDefinitionId" : {
          "type" : "string"
        },
        "processInstanceId" : {
          "type" : "string"
        },
        "processDefinitionId" : {
          "type" : "string"
        },
        "processDefinitionKey" : {
          "type" : "string"
        },
        "executionId" : {
          "type" : "string"
        },
        "exceptionMessage" : {
          "type" : "string"
        },
        "retries" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dueDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "suspended" : {
          "type" : "boolean"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int64"
        },
        "tenantId" : {
          "type" : "string"
        }
      }
    },
    "JobDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "jobDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processDefinitionKey" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "executionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "exceptionMessage" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "retries" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "some example",
          "description" : "description of the property"
        },
        "dueDate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "some example",
          "description" : "description of the property"
        },
        "suspended" : {
          "type" : "boolean"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "some example",
          "description" : "description of the property"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "JobDuedateDto" : {
      "type" : "object",
      "properties" : {
        "duedate" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "JobQueryDto" : {
      "type" : "object",
      "properties" : {
        "sorting" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SortingDto"
          }
        }
      }
    },
    "JobSuspensionStateDto" : {
      "type" : "object",
      "properties" : {
        "suspended" : {
          "type" : "boolean"
        },
        "jobId" : {
          "type" : "string"
        }
      }
    },
    "MetricsResource" : {
      "type" : "object"
    },
    "MetricsResultDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "example" : "some example",
          "description" : "description of the property",
          "$ref" : "#/definitions/Number"
        }
      }
    },
    "MigrationExecutionDto" : {
      "type" : "object",
      "properties" : {
        "migrationPlan" : {
          "$ref" : "#/definitions/MigrationPlanDto"
        },
        "processInstanceIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "processInstanceQuery" : {
          "$ref" : "#/definitions/ProcessInstanceQueryDto"
        },
        "skipIoMappings" : {
          "type" : "boolean"
        },
        "skipCustomListeners" : {
          "type" : "boolean"
        }
      }
    },
    "MigrationInstructionDto" : {
      "type" : "object",
      "properties" : {
        "sourceActivityIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "targetActivityIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "updateEventTrigger" : {
          "type" : "boolean"
        }
      }
    },
    "MigrationInstructionValidationReportDto" : {
      "type" : "object",
      "properties" : {
        "instruction" : {
          "$ref" : "#/definitions/MigrationInstructionDto"
        },
        "failures" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "MigrationPlanDto" : {
      "type" : "object",
      "properties" : {
        "sourceProcessDefinitionId" : {
          "type" : "string"
        },
        "targetProcessDefinitionId" : {
          "type" : "string"
        },
        "instructions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MigrationInstructionDto"
          }
        }
      }
    },
    "MigrationPlanDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "sourceProcessDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "targetProcessDefinitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "instructions" : {
          "type" : "array",
          "example" : "some example",
          "description" : "description of the property",
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "MigrationPlanGenerationDto" : {
      "type" : "object",
      "properties" : {
        "sourceProcessDefinitionId" : {
          "type" : "string"
        },
        "targetProcessDefinitionId" : {
          "type" : "string"
        },
        "updateEventTriggers" : {
          "type" : "boolean"
        }
      }
    },
    "MigrationPlanReportDto" : {
      "type" : "object",
      "properties" : {
        "instructionReports" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MigrationInstructionValidationReportDto"
          }
        }
      }
    },
    "MigrationPlanReportDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "instructionReports" : {
          "type" : "array",
          "example" : "some example",
          "description" : "description of the property",
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "ModificationDto" : {
      "type" : "object",
      "properties" : {
        "instructions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcessInstanceModificationInstructionDto"
          }
        },
        "processInstanceIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "processInstanceQuery" : {
          "$ref" : "#/definitions/ProcessInstanceQueryDto"
        },
        "processDefinitionId" : {
          "type" : "string"
        },
        "skipIoMappings" : {
          "type" : "boolean"
        },
        "skipCustomListeners" : {
          "type" : "boolean"
        }
      }
    },
    "MultipartFormData" : {
      "type" : "object",
      "properties" : {
        "partNames" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Number" : {
      "type" : "object"
    },
    "PatchVariablesDto" : {
      "type" : "object",
      "properties" : {
        "modifications" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/VariableValueDto"
          }
        },
        "deletions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "PathSegment" : {
      "type" : "object",
      "properties" : {
        "path" : {
          "type" : "string"
        },
        "matrixParameters" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "PriorityDto" : {
      "type" : "object",
      "properties" : {
        "priority" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "ProcessDefinitionDiagramDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "bpmn20Xml" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "ProcessDefinitionDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "key" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int32"
        },
        "resource" : {
          "type" : "string"
        },
        "deploymentId" : {
          "type" : "string"
        },
        "diagram" : {
          "type" : "string"
        },
        "suspended" : {
          "type" : "boolean"
        },
        "tenantId" : {
          "type" : "string"
        },
        "versionTag" : {
          "type" : "string"
        },
        "historyTimeToLive" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ProcessDefinitionDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "key" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "category" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "description" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "name" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "version" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "some example",
          "description" : "description of the property"
        },
        "resource" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "deploymentId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "diagram" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "suspended" : {
          "type" : "boolean"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "versionTag" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "historyTimeToLive" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "ProcessDefinitionSuspensionStateDto" : {
      "type" : "object",
      "properties" : {
        "suspended" : {
          "type" : "boolean"
        },
        "processDefinitionId" : {
          "type" : "string"
        }
      }
    },
    "ProcessInstanceDto" : {
      "type" : "object",
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AtomLink"
          }
        },
        "id" : {
          "type" : "string"
        },
        "definitionId" : {
          "type" : "string"
        },
        "businessKey" : {
          "type" : "string"
        },
        "caseInstanceId" : {
          "type" : "string"
        },
        "ended" : {
          "type" : "boolean"
        },
        "suspended" : {
          "type" : "boolean"
        },
        "tenantId" : {
          "type" : "string"
        }
      }
    },
    "ProcessInstanceDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AtomLink"
          }
        },
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "definitionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "businessKey" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "ended" : {
          "type" : "boolean"
        },
        "suspended" : {
          "type" : "boolean"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "ProcessInstanceModificationDto" : {
      "type" : "object",
      "properties" : {
        "skipCustomListeners" : {
          "type" : "boolean"
        },
        "skipIoMappings" : {
          "type" : "boolean"
        },
        "instructions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcessInstanceModificationInstructionDto"
          }
        }
      }
    },
    "ProcessInstanceModificationInstructionDto" : {
      "type" : "object",
      "discriminator" : "type",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "variables" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/TriggerVariableValueDto"
          }
        },
        "activityId" : {
          "type" : "string"
        },
        "transitionId" : {
          "type" : "string"
        },
        "activityInstanceId" : {
          "type" : "string"
        },
        "transitionInstanceId" : {
          "type" : "string"
        },
        "ancestorActivityInstanceId" : {
          "type" : "string"
        }
      }
    },
    "ProcessInstanceQueryDto" : {
      "type" : "object",
      "properties" : {
        "deploymentId" : {
          "type" : "string"
        },
        "processDefinitionKey" : {
          "type" : "string"
        },
        "businessKey" : {
          "type" : "string"
        },
        "businessKeyLike" : {
          "type" : "string"
        },
        "caseInstanceId" : {
          "type" : "string"
        },
        "processDefinitionId" : {
          "type" : "string"
        },
        "superProcessInstance" : {
          "type" : "string"
        },
        "subProcessInstance" : {
          "type" : "string"
        },
        "superCaseInstance" : {
          "type" : "string"
        },
        "subCaseInstance" : {
          "type" : "string"
        },
        "active" : {
          "type" : "boolean"
        },
        "suspended" : {
          "type" : "boolean"
        },
        "processInstanceIds" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "incidentId" : {
          "type" : "string"
        },
        "incidentType" : {
          "type" : "string"
        },
        "incidentMessage" : {
          "type" : "string"
        },
        "incidentMessageLike" : {
          "type" : "string"
        },
        "withoutTenantId" : {
          "type" : "boolean"
        },
        "activityIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "variables" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VariableQueryParameterDto"
          }
        },
        "tenantIdIn" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "sorting" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SortingDto"
          }
        }
      }
    },
    "ProcessInstanceSuspensionStateDto" : {
      "type" : "object",
      "properties" : {
        "suspended" : {
          "type" : "boolean"
        },
        "processInstanceId" : {
          "type" : "string"
        }
      }
    },
    "RedeploymentDto" : {
      "type" : "object",
      "properties" : {
        "source" : {
          "type" : "string"
        },
        "resourceIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resourceNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Request" : {
      "type" : "object",
      "properties" : {
        "method" : {
          "type" : "string"
        }
      }
    },
    "ResourceOptionsDto" : {
      "type" : "object",
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AtomLink"
          }
        }
      }
    },
    "ResourceOptionsDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "links" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AtomLink"
          }
        }
      }
    },
    "RestartProcessInstanceDto" : {
      "type" : "object",
      "properties" : {
        "processInstanceIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "instructions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcessInstanceModificationInstructionDto"
          }
        },
        "historicProcessInstanceQuery" : {
          "$ref" : "#/definitions/HistoricProcessInstanceQueryDto"
        },
        "initialVariables" : {
          "type" : "boolean"
        },
        "skipCustomListeners" : {
          "type" : "boolean"
        },
        "skipIoMappings" : {
          "type" : "boolean"
        },
        "withoutBusinessKey" : {
          "type" : "boolean"
        }
      }
    },
    "RetriesDto" : {
      "type" : "object",
      "properties" : {
        "retries" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "SetJobRetriesByProcessDto" : {
      "type" : "object",
      "properties" : {
        "processInstances" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "processInstanceQuery" : {
          "$ref" : "#/definitions/ProcessInstanceQueryDto"
        },
        "historicProcessInstanceQuery" : {
          "$ref" : "#/definitions/HistoricProcessInstanceQueryDto"
        },
        "retries" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "SetJobRetriesDto" : {
      "type" : "object",
      "properties" : {
        "jobIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "jobQuery" : {
          "$ref" : "#/definitions/JobQueryDto"
        },
        "retries" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "SetRetriesForExternalTasksDto" : {
      "type" : "object",
      "properties" : {
        "externalTaskIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "externalTaskQuery" : {
          "$ref" : "#/definitions/ExternalTaskQueryDto"
        },
        "retries" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "SortingDto" : {
      "type" : "object",
      "properties" : {
        "sortBy" : {
          "type" : "string"
        },
        "sortOrder" : {
          "type" : "string"
        },
        "parameters" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "StartAfterInstructionDto" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ProcessInstanceModificationInstructionDto"
      }, {
        "type" : "object"
      } ]
    },
    "StartBeforeInstructionDto" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ProcessInstanceModificationInstructionDto"
      }, {
        "type" : "object"
      } ]
    },
    "StartProcessInstanceDto" : {
      "type" : "object",
      "properties" : {
        "variables" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/VariableValueDto"
          }
        },
        "businessKey" : {
          "type" : "string"
        },
        "caseInstanceId" : {
          "type" : "string"
        },
        "startInstructions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcessInstanceModificationInstructionDto"
          }
        },
        "skipCustomListeners" : {
          "type" : "boolean"
        },
        "skipIoMappings" : {
          "type" : "boolean"
        },
        "withVariablesInReturn" : {
          "type" : "boolean"
        }
      }
    },
    "StartTransitionInstructionDto" : {
      "allOf" : [ {
        "$ref" : "#/definitions/ProcessInstanceModificationInstructionDto"
      }, {
        "type" : "object"
      } ]
    },
    "SuspensionStateDto" : {
      "type" : "object",
      "properties" : {
        "suspended" : {
          "type" : "boolean"
        }
      }
    },
    "TaskDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "assignee" : {
          "type" : "string"
        },
        "created" : {
          "type" : "string",
          "format" : "date-time"
        },
        "due" : {
          "type" : "string",
          "format" : "date-time"
        },
        "followUp" : {
          "type" : "string",
          "format" : "date-time"
        },
        "delegationState" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "executionId" : {
          "type" : "string"
        },
        "owner" : {
          "type" : "string"
        },
        "parentTaskId" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32"
        },
        "processDefinitionId" : {
          "type" : "string"
        },
        "processInstanceId" : {
          "type" : "string"
        },
        "taskDefinitionKey" : {
          "type" : "string"
        },
        "caseExecutionId" : {
          "type" : "string"
        },
        "caseInstanceId" : {
          "type" : "string"
        },
        "caseDefinitionId" : {
          "type" : "string"
        },
        "suspended" : {
          "type" : "boolean"
        },
        "formKey" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        }
      }
    },
    "TaskQueryDto" : {
      "type" : "object",
      "properties" : {
        "processInstanceBusinessKey" : {
          "type" : "string"
        },
        "processInstanceBusinessKeyIn" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "processInstanceBusinessKeyLike" : {
          "type" : "string"
        },
        "processDefinitionKey" : {
          "type" : "string"
        },
        "processDefinitionKeyIn" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "processDefinitionId" : {
          "type" : "string"
        },
        "executionId" : {
          "type" : "string"
        },
        "activityInstanceIdIn" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "processDefinitionName" : {
          "type" : "string"
        },
        "processDefinitionNameLike" : {
          "type" : "string"
        },
        "processInstanceId" : {
          "type" : "string"
        },
        "assignee" : {
          "type" : "string"
        },
        "assigneeExpression" : {
          "type" : "string"
        },
        "assigneeLike" : {
          "type" : "string"
        },
        "assigneeLikeExpression" : {
          "type" : "string"
        },
        "candidateGroup" : {
          "type" : "string"
        },
        "candidateGroupExpression" : {
          "type" : "string"
        },
        "candidateUser" : {
          "type" : "string"
        },
        "candidateUserExpression" : {
          "type" : "string"
        },
        "includeAssignedTasks" : {
          "type" : "boolean"
        },
        "taskDefinitionKey" : {
          "type" : "string"
        },
        "taskDefinitionKeyIn" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "taskDefinitionKeyLike" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "descriptionLike" : {
          "type" : "string"
        },
        "involvedUser" : {
          "type" : "string"
        },
        "involvedUserExpression" : {
          "type" : "string"
        },
        "maxPriority" : {
          "type" : "integer",
          "format" : "int32"
        },
        "minPriority" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "nameNotEqual" : {
          "type" : "string"
        },
        "nameLike" : {
          "type" : "string"
        },
        "nameNotLike" : {
          "type" : "string"
        },
        "owner" : {
          "type" : "string"
        },
        "ownerExpression" : {
          "type" : "string"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32"
        },
        "parentTaskId" : {
          "type" : "string"
        },
        "unassigned" : {
          "type" : "boolean"
        },
        "active" : {
          "type" : "boolean"
        },
        "suspended" : {
          "type" : "boolean"
        },
        "caseDefinitionKey" : {
          "type" : "string"
        },
        "caseDefinitionId" : {
          "type" : "string"
        },
        "caseDefinitionName" : {
          "type" : "string"
        },
        "caseDefinitionNameLike" : {
          "type" : "string"
        },
        "caseInstanceId" : {
          "type" : "string"
        },
        "caseInstanceBusinessKey" : {
          "type" : "string"
        },
        "caseInstanceBusinessKeyLike" : {
          "type" : "string"
        },
        "caseExecutionId" : {
          "type" : "string"
        },
        "dueAfter" : {
          "type" : "string",
          "format" : "date-time"
        },
        "dueAfterExpression" : {
          "type" : "string"
        },
        "dueBefore" : {
          "type" : "string",
          "format" : "date-time"
        },
        "dueBeforeExpression" : {
          "type" : "string"
        },
        "dueDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "dueDateExpression" : {
          "type" : "string"
        },
        "followUpAfter" : {
          "type" : "string",
          "format" : "date-time"
        },
        "followUpAfterExpression" : {
          "type" : "string"
        },
        "followUpBefore" : {
          "type" : "string",
          "format" : "date-time"
        },
        "followUpBeforeExpression" : {
          "type" : "string"
        },
        "followUpBeforeOrNotExistent" : {
          "type" : "string",
          "format" : "date-time"
        },
        "followUpBeforeOrNotExistentExpression" : {
          "type" : "string"
        },
        "followUpDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "followUpDateExpression" : {
          "type" : "string"
        },
        "createdAfter" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createdAfterExpression" : {
          "type" : "string"
        },
        "createdBefore" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createdBeforeExpression" : {
          "type" : "string"
        },
        "createdOn" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createdOnExpression" : {
          "type" : "string"
        },
        "delegationState" : {
          "type" : "string"
        },
        "tenantIdIn" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "withoutTenantId" : {
          "type" : "boolean"
        },
        "candidateGroups" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "candidateGroupsExpression" : {
          "type" : "string"
        },
        "taskVariables" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VariableQueryParameterDto"
          }
        },
        "processVariables" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VariableQueryParameterDto"
          }
        },
        "caseInstanceVariables" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VariableQueryParameterDto"
          }
        },
        "sorting" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SortingDto"
          }
        }
      }
    },
    "TaskReportResource" : {
      "type" : "object"
    },
    "TenantDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "TenantDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "name" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "TenantGroupMembersResource" : {
      "type" : "object"
    },
    "TenantUserMembersResource" : {
      "type" : "object"
    },
    "TransitionInstanceDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "parentActivityInstanceId" : {
          "type" : "string"
        },
        "processInstanceId" : {
          "type" : "string"
        },
        "processDefinitionId" : {
          "type" : "string"
        },
        "activityId" : {
          "type" : "string"
        },
        "activityName" : {
          "type" : "string"
        },
        "activityType" : {
          "type" : "string"
        },
        "executionId" : {
          "type" : "string"
        },
        "targetActivityId" : {
          "type" : "string"
        }
      }
    },
    "TriggerVariableValueDto" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "object"
        },
        "valueInfo" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "local" : {
          "type" : "boolean"
        }
      }
    },
    "UriBuilder" : {
      "type" : "object"
    },
    "UriInfo" : {
      "type" : "object",
      "properties" : {
        "path" : {
          "type" : "string"
        },
        "absolutePath" : {
          "type" : "string",
          "format" : "uri"
        },
        "pathParameters" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "queryParameters" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "baseUri" : {
          "type" : "string",
          "format" : "uri"
        },
        "baseUriBuilder" : {
          "$ref" : "#/definitions/UriBuilder"
        },
        "pathSegments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PathSegment"
          }
        },
        "requestUri" : {
          "type" : "string",
          "format" : "uri"
        },
        "requestUriBuilder" : {
          "$ref" : "#/definitions/UriBuilder"
        },
        "absolutePathBuilder" : {
          "$ref" : "#/definitions/UriBuilder"
        },
        "matchedURIs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "matchedResources" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      }
    },
    "UserCredentialsDto" : {
      "type" : "object",
      "properties" : {
        "password" : {
          "type" : "string"
        },
        "authenticatedUserPassword" : {
          "type" : "string"
        }
      }
    },
    "UserDto" : {
      "type" : "object",
      "properties" : {
        "profile" : {
          "$ref" : "#/definitions/UserProfileDto"
        },
        "credentials" : {
          "$ref" : "#/definitions/UserCredentialsDto"
        }
      }
    },
    "UserIdDto" : {
      "type" : "object",
      "properties" : {
        "userId" : {
          "type" : "string"
        }
      }
    },
    "UserOperationLogRestService" : {
      "type" : "object"
    },
    "UserProfileDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        }
      }
    },
    "UserProfileDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "firstName" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "lastName" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "email" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "UserResource" : {
      "type" : "object"
    },
    "VariableInstanceDto" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "object"
        },
        "valueInfo" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "processInstanceId" : {
          "type" : "string"
        },
        "executionId" : {
          "type" : "string"
        },
        "caseInstanceId" : {
          "type" : "string"
        },
        "caseExecutionId" : {
          "type" : "string"
        },
        "taskId" : {
          "type" : "string"
        },
        "activityInstanceId" : {
          "type" : "string"
        },
        "errorMessage" : {
          "type" : "string"
        },
        "tenantId" : {
          "type" : "string"
        }
      }
    },
    "VariableInstanceDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "object"
        },
        "valueInfo" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "id" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "name" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "processInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "executionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "caseExecutionId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "taskId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "activityInstanceId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "errorMessage" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "tenantId" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        }
      }
    },
    "VariableInstanceQueryDto" : {
      "type" : "object",
      "properties" : {
        "sorting" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SortingDto"
          }
        }
      }
    },
    "VariableNameDto" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "local" : {
          "type" : "boolean"
        }
      }
    },
    "VariableQueryParameterDto" : {
      "type" : "object",
      "properties" : {
        "operator" : {
          "type" : "string"
        },
        "value" : {
          "type" : "object"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "VariableValueDto" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "object"
        },
        "valueInfo" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "VariableValueDtoSwagger" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "some example",
          "description" : "description of the property"
        },
        "value" : {
          "type" : "object",
          "example" : "some example",
          "description" : "description of the property"
        },
        "valueInfo" : {
          "type" : "object",
          "example" : "some example",
          "description" : "description of the property",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    }
  }
}